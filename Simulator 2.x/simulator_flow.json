[
    {
        "id": "c5821ca1.ee2da",
        "type": "subflow",
        "name": "Sub PV 2.0",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "c9a13be.fe492c8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 40,
                "wires": [
                    {
                        "id": "cb144244.8df92",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1160,
                "y": 380,
                "wires": [
                    {
                        "id": "180041c4.08fc2e",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1140,
                "y": 40,
                "wires": [
                    {
                        "id": "fdaf3909e1383774",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Component-ID",
                "type": "num",
                "value": "1"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "outputLabels": [
            "openWB",
            "schnelle Regelwerte",
            "Debug"
        ],
        "status": {
            "x": 820,
            "y": 40,
            "wires": [
                {
                    "id": "b8b748bb.7b2148",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "180041c4.08fc2e",
        "type": "change",
        "z": "c5821ca1.ee2da",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pv",
                "pt": "flow",
                "to": "$min([(payload+$flowContext(\"PVNorm\"))*-1,0])",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pv",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "/pv/W",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 380,
        "wires": [
            [
                "762b7362.1cab7c"
            ]
        ]
    },
    {
        "id": "2e0d1128.5eb14e",
        "type": "smooth",
        "z": "c5821ca1.ee2da",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "10",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 560,
        "y": 380,
        "wires": [
            [
                "180041c4.08fc2e"
            ]
        ]
    },
    {
        "id": "6506b2a6.b2ebdc",
        "type": "random",
        "z": "c5821ca1.ee2da",
        "name": "+/- 100W",
        "low": "-100",
        "high": "100",
        "inte": "false",
        "property": "payload",
        "x": 360,
        "y": 380,
        "wires": [
            [
                "2e0d1128.5eb14e"
            ]
        ]
    },
    {
        "id": "27c8d022.8cc7c",
        "type": "change",
        "z": "c5821ca1.ee2da",
        "name": "Energie in Wh",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$flowContext(\"pv\")*timeInterval/1000/3600*(-1)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 440,
        "wires": [
            [
                "27220a75.050556"
            ]
        ],
        "info": "$number(payload)*(timeInterval/1000)/3600/1000"
    },
    {
        "id": "12b3849e.717fcb",
        "type": "inject",
        "z": "c5821ca1.ee2da",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "6506b2a6.b2ebdc"
            ]
        ]
    },
    {
        "id": "27220a75.050556",
        "type": "change",
        "z": "c5821ca1.ee2da",
        "name": "Zähler aktualisieren",
        "rules": [
            {
                "t": "set",
                "p": "PV_Zähler",
                "pt": "flow",
                "to": "payload+$flowContext(\"PV_Zähler\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PV_Zähler",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "f2680f1d.7414d",
        "type": "inject",
        "z": "c5821ca1.ee2da",
        "name": "Publish Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "cb144244.8df92"
            ]
        ]
    },
    {
        "id": "cb144244.8df92",
        "type": "function",
        "z": "c5821ca1.ee2da",
        "name": "Senden der Flow-Daten",
        "func": "const ComponentId = env.get(\"Component-ID\");\n\nconst actualPower = parseInt(flow.get(\"pv\").toFixed(0));\nconst actualPowerkW = actualPower / 1000;\n\nvar statusColor = \"green\";\nvar statusShape = \"dot\";\nif(actualPower > -100)\n    statusColor= \"red\";\n\nnode.status({\n        fill: statusColor,\n        shape: statusShape,\n        text:actualPowerkW.toFixed(1)+\"kW\"\n    });\n\nreturn [\n    [\n        {\n            topic: \"openWB/mqtt/pv/\" + ComponentId + \"/get/power\",\n            payload: actualPower\n        },\n        {\n            topic: \"openWB/mqtt/pv/\" + ComponentId + \"/get/exported\",\n            payload: parseInt(flow.get(\"PV_Zähler\").toFixed(0))\n        }\n    ]\n]",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nnode.status({\n        fill: \"yellow\",\n        shape: \"ring\",\n        text: \"starting...\"\n    });\n",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "b8b748bb.7b2148",
        "type": "status",
        "z": "c5821ca1.ee2da",
        "name": "",
        "scope": [
            "cb144244.8df92"
        ],
        "x": 700,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "c9a13be.fe492c8",
        "type": "switch",
        "z": "c5821ca1.ee2da",
        "name": "Split Topics",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/W$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 140,
        "wires": [
            [
                "25a41bf5.5cb904"
            ]
        ],
        "outputLabels": [
            "Soll-Leistung"
        ]
    },
    {
        "id": "25a41bf5.5cb904",
        "type": "change",
        "z": "c5821ca1.ee2da",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "PVNorm",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "7135e239.69cd8c",
        "type": "inject",
        "z": "c5821ca1.ee2da",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "78037fbd.010fc",
                "c7862a5e.6a3e28"
            ]
        ]
    },
    {
        "id": "a0ab0f47.d1e2b",
        "type": "change",
        "z": "c5821ca1.ee2da",
        "name": "Zähler initialisieren",
        "rules": [
            {
                "t": "set",
                "p": "PV_Zähler",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "78037fbd.010fc",
        "type": "switch",
        "z": "c5821ca1.ee2da",
        "name": "Zähler gesetzt?",
        "property": "PV_Zähler",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 240,
        "wires": [
            [
                "a0ab0f47.d1e2b"
            ]
        ]
    },
    {
        "id": "c7862a5e.6a3e28",
        "type": "change",
        "z": "c5821ca1.ee2da",
        "name": "Init flow context",
        "rules": [
            {
                "t": "set",
                "p": "pv",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "PVNorm",
                "pt": "flow",
                "to": "1500",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "762b7362.1cab7c",
        "type": "interval-length",
        "z": "c5821ca1.ee2da",
        "format": "mills",
        "bytopic": false,
        "minimum": "",
        "maximum": "",
        "window": "",
        "timeout": false,
        "msgTimeout": "",
        "minimumunit": "msecs",
        "maximumunit": "msecs",
        "windowunit": "msecs",
        "msgTimeoutUnit": "msecs",
        "reset": false,
        "startup": false,
        "msgField": "timeInterval",
        "timestampField": "previousTimestamp",
        "repeatTimeout": false,
        "name": "Zeit zwischen den Nachrichten messen",
        "x": 460,
        "y": 440,
        "wires": [
            [
                "27c8d022.8cc7c"
            ],
            []
        ]
    },
    {
        "id": "fdaf3909e1383774",
        "type": "inject",
        "z": "c5821ca1.ee2da",
        "name": "Debug",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "debug",
        "payload": "{\t    \"power\": $flowContext(\"pv\"),\t    \"power_norm\": $flowContext(\"PVNorm\"),\t    \"counter\": $flowContext(\"PV_Zähler\")\t}",
        "payloadType": "jsonata",
        "x": 1020,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "2dd5cf5c.4ae26",
        "type": "subflow",
        "name": "Sub BAT 2.0",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 200,
                "wires": [
                    {
                        "id": "c7cb712c4b8055a0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 580,
                "y": 40,
                "wires": [
                    {
                        "id": "28e0a4ab.758cfc",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1360,
                "y": 560,
                "wires": [
                    {
                        "id": "2e89309f.ba832",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1120,
                "y": 900,
                "wires": [
                    {
                        "id": "dec3f627.a2d958",
                        "port": 0
                    },
                    {
                        "id": "3ef4b7a7.942b78",
                        "port": 0
                    },
                    {
                        "id": "9079ffaf.4a096",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1190,
                "y": 220,
                "wires": [
                    {
                        "id": "fef8a714af3c543a",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1230,
                "y": 40,
                "wires": [
                    {
                        "id": "a6823773fb1192f8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Component-ID",
                "type": "str",
                "value": "2"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "outputLabels": [
            "openWB",
            "schnelle Regelwerte",
            "Chart",
            "dynamisches Limit",
            "Debug"
        ],
        "status": {
            "x": 880,
            "y": 40,
            "wires": [
                {
                    "id": "f5afed4e.b6449",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "fa698281.c98db",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "maxPower",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "24d6c753.7611c8",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "maxCapacity",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "20f9c373.a12e3c",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "evu",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "e46c92f3.d21a9",
        "type": "switch",
        "z": "2dd5cf5c.4ae26",
        "name": "Split Topics",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/soc",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/BatMaxPower",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/power_limit",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/BatCapacity",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/evu/W$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 490,
        "y": 200,
        "wires": [
            [
                "84fa4a81.59f898"
            ],
            [
                "fa698281.c98db"
            ],
            [
                "fef8a714af3c543a"
            ],
            [
                "24d6c753.7611c8"
            ],
            [
                "20f9c373.a12e3c"
            ]
        ],
        "outputLabels": [
            "SoC",
            "Max. Power",
            "",
            "Kapazität",
            "EVU"
        ]
    },
    {
        "id": "84fa4a81.59f898",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "actualCapacity",
                "pt": "flow",
                "to": "(payload/100)*$flowContext(\"maxCapacity\")\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f5afed4e.b6449",
        "type": "status",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "scope": [
            "28e0a4ab.758cfc"
        ],
        "x": 720,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "28e0a4ab.758cfc",
        "type": "function",
        "z": "2dd5cf5c.4ae26",
        "name": "Senden der Flow-Daten",
        "func": "const ComponentId = env.get(\"Component-ID\");\n\nconst actualPower = parseInt(flow.get(\"bat\").toFixed(0));\nconst actualPowerkW = actualPower / 1000;\n\nconst maxCapacity = flow.get(\"maxCapacity\");\nconst actualCapacity = flow.get(\"actualCapacity\");\nvar actualSoc = actualCapacity / maxCapacity * 100;\nactualSoc = parseInt(actualSoc.toFixed(0));\n\nvar statusColor = \"yellow\";\nvar statusShape = \"ring\";\nif(actualPower < 0)\n    statusColor = \"red\";\nif(actualPower > 0)\n    statusColor = \"green\";\nif(actualSoc > 0)\n    statusShape = \"dot\";\n\nnode.status({\n        fill:  statusColor,\n        shape: statusShape,\n        text:  actualPowerkW.toFixed(1)+\"kW \" + actualSoc + \"%\"\n    });\n\nreturn [\n    [\n        {\n            topic: \"openWB/mqtt/bat/\" + ComponentId + \"/get/imported\",\n            payload: parseFloat(flow.get(\"WhImported\").toFixed(3))\n        },\n        {\n            topic: \"openWB/mqtt/bat/\" + ComponentId + \"/get/exported\",\n            payload: parseFloat(flow.get(\"WhExported\").toFixed(3))\n        },\n        {\n            topic: \"openWB/mqtt/bat/\" + ComponentId + \"/get/power\",\n            payload: actualPower\n        },\n        {\n            topic: \"openWB/mqtt/bat/\" + ComponentId + \"/get/soc\",\n            payload: actualSoc\n        }\n    ]\n]",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "4b72ed2d.3021d4",
        "type": "inject",
        "z": "2dd5cf5c.4ae26",
        "name": "Publish Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "28e0a4ab.758cfc"
            ]
        ]
    },
    {
        "id": "78c63bc8.9860b4",
        "type": "inject",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "13d7d661.97e00a",
                "778f747e.c1b43c",
                "b274f2af.4b00a"
            ]
        ]
    },
    {
        "id": "5b44278d.e38d58",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "Zähler Bezug initialisieren",
        "rules": [
            {
                "t": "set",
                "p": "WhImported",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "13d7d661.97e00a",
        "type": "switch",
        "z": "2dd5cf5c.4ae26",
        "name": "Zähler Bezug gesetzt?",
        "property": "WhImported",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "5b44278d.e38d58"
            ]
        ]
    },
    {
        "id": "778f747e.c1b43c",
        "type": "switch",
        "z": "2dd5cf5c.4ae26",
        "name": "Zähler Einspeisung gesetzt?",
        "property": "WhExported",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 360,
        "y": 420,
        "wires": [
            [
                "c5700f42.8bcec"
            ]
        ]
    },
    {
        "id": "c5700f42.8bcec",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "Zähler Einspeisung initialisieren",
        "rules": [
            {
                "t": "set",
                "p": "WhExported",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "b274f2af.4b00a",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "Init flow context",
        "rules": [
            {
                "t": "set",
                "p": "bat",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "evu",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "maxPower",
                "pt": "flow",
                "to": "3300",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "dynamicMaxPower",
                "pt": "flow",
                "to": "3300",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "maxCapacity",
                "pt": "flow",
                "to": "5000",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "actualCapacity",
                "pt": "flow",
                "to": "2500",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "dec3f627.a2d958",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "EVU",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "3ef4b7a7.942b78",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "BAT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "bef0a1f8.2e2cf",
        "type": "inject",
        "z": "2dd5cf5c.4ae26",
        "name": "Clear chart on deploy",
        "props": [
            {
                "p": "payload",
                "v": "{\"data\":[]}",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "{\"data\":[]}",
        "payloadType": "json",
        "x": 680,
        "y": 960,
        "wires": [
            [
                "9079ffaf.4a096"
            ]
        ]
    },
    {
        "id": "9079ffaf.4a096",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 916,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "167235f4.d859ea",
        "type": "function",
        "z": "2dd5cf5c.4ae26",
        "name": "Map to Power Range",
        "func": "const range = flow.get(\"maxPower\");\nconst dynamicPower = flow.get(\"dynamicMaxPower\");\nconst actualCapacity = flow.get(\"actualCapacity\");\nconst maxCapacity = flow.get(\"maxCapacity\");\n\nmsg.payload = msg.payload * (2*range) - range;\nif( actualCapacity == 0 ){\n    msg.payload = Math.max(msg.payload,0);\n} else if( actualCapacity == maxCapacity ){\n    msg.payload = Math.min(msg.payload,0);\n}\nif( dynamicPower != null ){\n    msg.payload = Math.min(msg.payload, dynamicPower);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 560,
        "wires": [
            [
                "3ef4b7a7.942b78",
                "2e89309f.ba832"
            ]
        ]
    },
    {
        "id": "a6d6bae9.e7d3f8",
        "type": "inject",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "evu",
        "payloadType": "flow",
        "x": 140,
        "y": 560,
        "wires": [
            [
                "dec3f627.a2d958",
                "9ef887dd.50864"
            ]
        ]
    },
    {
        "id": "dc6bbb24.2c42a8",
        "type": "switch",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "property": "bat",
        "propertyType": "flow",
        "rules": [
            {
                "t": "lt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "gte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 640,
        "wires": [
            [
                "3c54d06e.c5af5"
            ],
            [
                "23f1985b.8c78b8"
            ]
        ]
    },
    {
        "id": "32fd7a43.8ae456",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "Energie in Wh",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "timeInterval/1000/3600*$flowContext(\"bat\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 640,
        "wires": [
            [
                "dc6bbb24.2c42a8",
                "a4d0b51c.aa13c8"
            ]
        ],
        "info": "$number(payload)*(timeInterval/1000)/3600/1000"
    },
    {
        "id": "3c54d06e.c5af5",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "Zähler Einspeisung aktualisieren",
        "rules": [
            {
                "t": "set",
                "p": "WhExported",
                "pt": "flow",
                "to": "payload*(-1)+$flowContext(\"WhExported\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "WhExported",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "23f1985b.8c78b8",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "Zähler Bezug aktualisieren",
        "rules": [
            {
                "t": "set",
                "p": "WhImported",
                "pt": "flow",
                "to": "payload+$flowContext(\"WhImported\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "WhImported",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "2e89309f.ba832",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "/houseBattery/W",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "bat",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 560,
        "wires": [
            [
                "73fdf2f2.666c1c"
            ]
        ]
    },
    {
        "id": "a4d0b51c.aa13c8",
        "type": "function",
        "z": "2dd5cf5c.4ae26",
        "name": "actualCapacity aktualisieren (SoC)",
        "func": "var actualCapacity = flow.get(\"actualCapacity\");\nconst maxCapacity = flow.get(\"maxCapacity\");\n\nactualCapacity = Math.min(\n    Math.max(\n        actualCapacity + msg.payload,\n        0\n        ),\n        maxCapacity\n    );\n\nflow.set(\"actualCapacity\", actualCapacity);\nmsg.payload = actualCapacity;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "9ef887dd.50864",
        "type": "PID",
        "z": "2dd5cf5c.4ae26",
        "name": "Leistungsregelung",
        "setpoint": "0",
        "pb": "11000",
        "ti": "6",
        "td": 0,
        "integral_default": 0.5,
        "smooth_factor": "0",
        "max_interval": "10",
        "enable": 1,
        "disabled_op": "0,5",
        "x": 370,
        "y": 560,
        "wires": [
            [
                "167235f4.d859ea"
            ]
        ]
    },
    {
        "id": "73fdf2f2.666c1c",
        "type": "interval-length",
        "z": "2dd5cf5c.4ae26",
        "format": "mills",
        "bytopic": false,
        "minimum": "",
        "maximum": "",
        "window": "",
        "timeout": false,
        "msgTimeout": "",
        "minimumunit": "msecs",
        "maximumunit": "msecs",
        "windowunit": "msecs",
        "msgTimeoutUnit": "msecs",
        "reset": false,
        "startup": false,
        "msgField": "timeInterval",
        "timestampField": "previousTimestamp",
        "repeatTimeout": false,
        "name": "Zeit zwischen den Nachrichten messen",
        "x": 440,
        "y": 640,
        "wires": [
            [
                "32fd7a43.8ae456"
            ],
            []
        ]
    },
    {
        "id": "a6823773fb1192f8",
        "type": "inject",
        "z": "2dd5cf5c.4ae26",
        "name": "Debug",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "debug",
        "payload": "{\t   \"power\": $flowContext(\"bat\"),\t   \"max_power\": $flowContext(\"maxPower\"),\t   \"dynamic_max_power\": $flowContext(\"dynamicMaxPower\"),\t   \"evu_power\": $flowContext(\"evu\"),\t   \"actual_capacity\": $flowContext(\"actualCapacity\"),\t   \"max_capacity\": $flowContext(\"maxCapacity\"),\t   \"counter_import\": $flowContext(\"WhImported\"),\t   \"counter_export\": $flowContext(\"WhExported\")\t}",
        "payloadType": "jsonata",
        "x": 1060,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "fef8a714af3c543a",
        "type": "change",
        "z": "2dd5cf5c.4ae26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dynamicMaxPower",
                "pt": "flow",
                "to": "payload = null ? payload : $number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c7cb712c4b8055a0",
        "type": "switch",
        "z": "2dd5cf5c.4ae26",
        "name": "Filter by Component-ID",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$contains(topic, \"bat/\" & $string($env(\"Component-ID\")) & \"/\")",
                "vt": "jsonata"
            },
            {
                "t": "regex",
                "v": "^/",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 200,
        "wires": [
            [
                "e46c92f3.d21a9"
            ],
            [
                "e46c92f3.d21a9"
            ]
        ]
    },
    {
        "id": "da060938.c8ff48",
        "type": "subflow",
        "name": "Sub EVU 2.0",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 380,
                "wires": [
                    {
                        "id": "60345bb6.1855d4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 560,
                "y": 40,
                "wires": [
                    {
                        "id": "97a98e87.248e6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1400,
                "y": 1040,
                "wires": [
                    {
                        "id": "f7fd464c.dac218",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1140,
                "y": 40,
                "wires": [
                    {
                        "id": "c1f27145620a046e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Component-ID",
                "type": "num",
                "value": "0"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "outputLabels": [
            "openWB",
            "schnelle Regelwerte",
            "Debug",
            "Dashboard"
        ],
        "status": {
            "x": 850,
            "y": 40,
            "wires": [
                {
                    "id": "8d39538d.a5c0b",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "a14ffb7.da27208",
        "type": "inject",
        "z": "da060938.c8ff48",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 980,
        "wires": [
            [
                "2eb2b9d4.130976"
            ]
        ]
    },
    {
        "id": "2eb2b9d4.130976",
        "type": "random",
        "z": "da060938.c8ff48",
        "name": "+/- 50 W",
        "low": "-50",
        "high": "50",
        "inte": "false",
        "property": "payload",
        "x": 320,
        "y": 980,
        "wires": [
            [
                "43f0c42.2e71e3c"
            ]
        ]
    },
    {
        "id": "43f0c42.2e71e3c",
        "type": "smooth",
        "z": "da060938.c8ff48",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "10",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 500,
        "y": 980,
        "wires": [
            [
                "80f26b21aa9b6cca"
            ]
        ]
    },
    {
        "id": "3ba0e67b.44155a",
        "type": "function",
        "z": "da060938.c8ff48",
        "name": "Summe",
        "func": "node.status({\n        text: flow.get(\"leistungLP1\")+\"/\"+flow.get(\"leistungLP2\")+\"/\"+flow.get(\"leistungLP3\")+\"/\"+flow.get(\"hausverbrauch\")+\"/\"+flow.get(\"pv\")+\"/\"+flow.get(\"bat\")\n    });\n\n\nmsg.payload =  flow.get(\"leistungLP1\") + flow.get(\"leistungLP2\") + flow.get(\"leistungLP3\") + flow.get(\"hausverbrauch\") + flow.get(\"pv\") + flow.get(\"bat\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1040,
        "wires": [
            [
                "f7fd464c.dac218"
            ]
        ]
    },
    {
        "id": "9e71bf31.d0c6d",
        "type": "switch",
        "z": "da060938.c8ff48",
        "name": "Einspeisung/Bezug",
        "property": "evu",
        "propertyType": "flow",
        "rules": [
            {
                "t": "lt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "gte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 1140,
        "wires": [
            [
                "5381aca8.785c94"
            ],
            [
                "68dda824.2a1208"
            ]
        ]
    },
    {
        "id": "f7fd464c.dac218",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "evu",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "/evu/W",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1040,
        "wires": [
            [
                "9eed1b2f.670f88"
            ]
        ]
    },
    {
        "id": "2af10c7b.8279c4",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "Energie in Wh",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$flowContext(\"evu\")*timeInterval/1000/3600",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1140,
        "wires": [
            [
                "9e71bf31.d0c6d"
            ]
        ],
        "info": "$number(payload)*(timeInterval/1000)/3600/1000"
    },
    {
        "id": "5381aca8.785c94",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "Zähler Einspeisung aktualisieren",
        "rules": [
            {
                "t": "set",
                "p": "WhExported",
                "pt": "flow",
                "to": "payload*(-1)+$flowContext(\"WhExported\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "WhExported",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "68dda824.2a1208",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "Zähler Bezug aktualisieren",
        "rules": [
            {
                "t": "set",
                "p": "WhImported",
                "pt": "flow",
                "to": "payload+$flowContext(\"WhImported\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "WhImported",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "8d39538d.a5c0b",
        "type": "status",
        "z": "da060938.c8ff48",
        "name": "",
        "scope": [
            "97a98e87.248e6"
        ],
        "x": 740,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "97a98e87.248e6",
        "type": "function",
        "z": "da060938.c8ff48",
        "name": "Senden der Flow-Daten",
        "func": "const ComponentId = env.get(\"Component-ID\");\n\nconst actualPower = parseInt(flow.get(\"evu\").toFixed(0));\nconst actualPowerkW = actualPower / 1000;\nconst actualCurrent = flow.get(\"evu_current\");\nconst voltageL1 = flow.get(\"spannungL1\");\nconst voltageL2 = flow.get(\"spannungL2\");\nconst voltageL3 = flow.get(\"spannungL3\");\nconst powerFactorL1 = flow.get(\"leistungsfaktorL1\");\nconst powerFactorL2 = flow.get(\"leistungsfaktorL2\");\nconst powerFactorL3 = flow.get(\"leistungsfaktorL3\");\n\nvar statusColor = \"green\";\nvar statusShape = \"dot\";\nif(actualPower > 0)\n    statusColor= \"red\";\n\nnode.status({\n        fill: statusColor,\n        shape: statusShape,\n        text:actualPowerkW.toFixed(1)+\"kW, \"+flow.get(\"evu_current\")\n    });\n\nreturn [\n    [\n        {\n            topic: \"openWB/mqtt/counter/\" + ComponentId + \"/get/imported\",\n            payload: parseFloat(flow.get(\"WhImported\").toFixed(3))\n        },\n        {\n            topic: \"openWB/mqtt/counter/\" + ComponentId + \"/get/exported\",\n            payload: parseFloat(flow.get(\"WhExported\").toFixed(3))\n        },\n        {\n            topic: \"openWB/mqtt/counter/\" + ComponentId + \"/get/power\",\n            payload: parseInt(flow.get(\"evu\").toFixed(0))\n        },\n        {\n            topic: \"openWB/mqtt/counter/\" + ComponentId + \"/get/currents\",\n            payload: actualCurrent\n        },\n        {\n            topic: \"openWB/mqtt/counter/\" + ComponentId + \"/get/voltages\",\n            payload: [voltageL1, voltageL2, voltageL3]\n        },\n        {\n            topic: \"openWB/mqtt/counter/\" + ComponentId + \"/get/powers\",\n            payload: [voltageL1 * actualCurrent[0] * powerFactorL1, voltageL2 * actualCurrent[1] * powerFactorL2, voltageL3 * actualCurrent[2] * powerFactorL3]\n        },\n        {\n            topic: \"openWB/mqtt/counter/\" + ComponentId + \"/get/power_factors\",\n            payload: [powerFactorL1, powerFactorL2, powerFactorL3]\n        },\n        {\n            topic: \"openWB/mqtt/counter/\" + ComponentId + \"/get/frequency\",\n            payload: parseFloat(flow.get(\"frequency\"))\n        }\n   ]\n]",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "7ccddecd.3d4f7",
        "type": "inject",
        "z": "da060938.c8ff48",
        "name": "Publish Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "97a98e87.248e6"
            ]
        ]
    },
    {
        "id": "d4ec25e5.d87818",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "leistungLP1",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "d02876f.be87688",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "leistungLP2",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "15aef799.6ac4c8",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "leistungLP3",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "1e14f60e.53005a",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pv",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "60345bb6.1855d4",
        "type": "switch",
        "z": "da060938.c8ff48",
        "name": "Split Topics",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/Hausverbrauch_p1$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/Hausverbrauch_p2$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/Hausverbrauch_p3$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "^simulator\\/chargepoint\\/[0-9]+\\/id$",
                "vt": "str",
                "case": false
            },
            {
                "t": "cont",
                "v": "$join(\t    [\t        \"/chargepoint/\",\t        $string($flowContext(\"id_LP1\")),\t        \"/get/power_all\"\t    ]\t)",
                "vt": "jsonata"
            },
            {
                "t": "cont",
                "v": "$join(\t   [\t       \"/chargepoint/\",\t       $string($flowContext(\"id_LP1\")),\t       \"/get/current_p1\"\t    \t   ]\t\t)\t",
                "vt": "jsonata"
            },
            {
                "t": "cont",
                "v": "$join(\t   [\t       \"/chargepoint/\",\t       $string($flowContext(\"id_LP1\")),\t       \"/get/current_p2\"\t    \t   ]\t\t)\t",
                "vt": "jsonata"
            },
            {
                "t": "cont",
                "v": "$join(\t   [\t       \"/chargepoint/\",\t       $string($flowContext(\"id_LP1\")),\t       \"/get/current_p3\"\t    \t   ]\t\t)\t",
                "vt": "jsonata"
            },
            {
                "t": "cont",
                "v": "$join(\t    [\t        \"/chargepoint/\",\t        $string($flowContext(\"id_LP2\")),\t        \"/get/power_all\"\t    ]\t)",
                "vt": "jsonata"
            },
            {
                "t": "cont",
                "v": "$join(\t   [\t       \"/chargepoint/\",\t       $string($flowContext(\"id_LP2\")),\t       \"/get/current_p1\"\t    \t   ]\t\t)\t",
                "vt": "jsonata"
            },
            {
                "t": "cont",
                "v": "$join(\t   [\t       \"/chargepoint/\",\t       $string($flowContext(\"id_LP2\")),\t       \"/get/current_p2\"\t    \t   ]\t\t)\t",
                "vt": "jsonata"
            },
            {
                "t": "cont",
                "v": "$join(\t   [\t       \"/chargepoint/\",\t       $string($flowContext(\"id_LP2\")),\t       \"/get/current_p3\"\t    \t   ]\t\t)\t",
                "vt": "jsonata"
            },
            {
                "t": "cont",
                "v": "$join(\t    [\t        \"/chargepoint/\",\t        $string($flowContext(\"id_LP3\")),\t        \"/get/power_all\"\t    ]\t)",
                "vt": "jsonata"
            },
            {
                "t": "cont",
                "v": "$join(\t   [\t       \"/chargepoint/\",\t       $string($flowContext(\"id_LP3\")),\t       \"/get/current_p1\"\t    \t   ]\t\t)\t",
                "vt": "jsonata"
            },
            {
                "t": "cont",
                "v": "$join(\t   [\t       \"/chargepoint/\",\t       $string($flowContext(\"id_LP3\")),\t       \"/get/current_p2\"\t    \t   ]\t\t)\t",
                "vt": "jsonata"
            },
            {
                "t": "cont",
                "v": "$join(\t   [\t       \"/chargepoint/\",\t       $string($flowContext(\"id_LP3\")),\t       \"/get/current_p3\"\t    \t   ]\t\t)\t",
                "vt": "jsonata"
            },
            {
                "t": "regex",
                "v": "\\/house[Bb]attery\\/W",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/pv\\/W$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/frequency$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 19,
        "x": 190,
        "y": 380,
        "wires": [
            [
                "1711441c919e2a1d"
            ],
            [
                "fc15ba2aeda2dbb2"
            ],
            [
                "a8e83e7e034910ce"
            ],
            [
                "ee96ba88673e1d59"
            ],
            [
                "d4ec25e5.d87818"
            ],
            [
                "aa9606e1.040c08"
            ],
            [
                "3491db86.1e0edc"
            ],
            [
                "98aedca3.6266b8"
            ],
            [
                "d02876f.be87688"
            ],
            [
                "1fe40bfd.d602cc"
            ],
            [
                "562388d9.7f1a9"
            ],
            [
                "41b8245b.5e25dc"
            ],
            [
                "15aef799.6ac4c8"
            ],
            [
                "d2263cc3.f53ef"
            ],
            [
                "68aeb24.1c455cc"
            ],
            [
                "eb955622.f1f86"
            ],
            [
                "e8165b40.91b4d8"
            ],
            [
                "1e14f60e.53005a"
            ],
            [
                "4d3c89efaca7be5e"
            ]
        ],
        "outputLabels": [
            "",
            "",
            "",
            "",
            "Ladepunkt 1",
            "",
            "",
            "",
            "Ladepunkt 2",
            "",
            "",
            "",
            "Ladepunkt 3",
            "",
            "",
            "",
            "Speicher",
            "PV 1",
            ""
        ]
    },
    {
        "id": "afb834d1.ac7628",
        "type": "inject",
        "z": "da060938.c8ff48",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 110,
        "y": 800,
        "wires": [
            [
                "a01ce865.943878",
                "9573d411.0e2728",
                "479952ca.b09c9c"
            ]
        ]
    },
    {
        "id": "3d3ebf4b.ea013",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "Zähler Bezug initialisieren",
        "rules": [
            {
                "t": "set",
                "p": "WhImported",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "a01ce865.943878",
        "type": "switch",
        "z": "da060938.c8ff48",
        "name": "Zähler Bezug gesetzt?",
        "property": "WhImported",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 800,
        "wires": [
            [
                "3d3ebf4b.ea013"
            ]
        ]
    },
    {
        "id": "9573d411.0e2728",
        "type": "switch",
        "z": "da060938.c8ff48",
        "name": "Zähler Einspeisung gesetzt?",
        "property": "WhExported",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 840,
        "wires": [
            [
                "76ad4288.0e1b7c"
            ]
        ]
    },
    {
        "id": "76ad4288.0e1b7c",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "Zähler Einspeisung initialisieren",
        "rules": [
            {
                "t": "set",
                "p": "WhExported",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "e8165b40.91b4d8",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bat",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "479952ca.b09c9c",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "Init flow context",
        "rules": [
            {
                "t": "set",
                "p": "leistungLP1",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "leistungLP2",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "leistungLP3",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "evu",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "pv",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "bat",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "hausverbrauch",
                "pt": "flow",
                "to": "1000",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "HausverbrauchNorm",
                "pt": "flow",
                "to": "1000",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "spannungL1",
                "pt": "flow",
                "to": "230",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "spannungL2",
                "pt": "flow",
                "to": "230",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "spannungL3",
                "pt": "flow",
                "to": "230",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "leistungsfaktorL1",
                "pt": "flow",
                "to": "1.0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "leistungsfaktorL2",
                "pt": "flow",
                "to": "1.0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "leistungsfaktorL3",
                "pt": "flow",
                "to": "1.0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "aa9606e1.040c08",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "current_p1_LP1",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "6c586f55.6462e",
        "type": "function",
        "z": "da060938.c8ff48",
        "name": "Ströme",
        "func": "const current_others = (flow.get(\"pv\") + flow.get(\"bat\")) / 230 / 3\nconst currentP1 = current_others + flow.get(\"hausverbrauch_p1\") / 230 + flow.get(\"current_p1_LP1\") + flow.get(\"current_p1_LP2\") + flow.get(\"current_p1_LP3\")\nconst currentP2 = current_others + flow.get(\"hausverbrauch_p2\") / 230 + flow.get(\"current_p2_LP1\") + flow.get(\"current_p2_LP2\") + flow.get(\"current_p2_LP3\")\nconst currentP3 = current_others + flow.get(\"hausverbrauch_p3\") / 230 + flow.get(\"current_p3_LP1\") + flow.get(\"current_p3_LP2\") + flow.get(\"current_p3_LP3\")\n\nmsg.payload = [parseFloat(currentP1.toFixed(2)), parseFloat(currentP2.toFixed(2)), parseFloat(currentP3.toFixed(2))]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 980,
        "wires": [
            [
                "3c97930d.404f4c"
            ]
        ]
    },
    {
        "id": "3c97930d.404f4c",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "evu_current",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "1fe40bfd.d602cc",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "current_p1_LP2",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "d2263cc3.f53ef",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "current_p1_LP3",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "3491db86.1e0edc",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "current_p2_LP1",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "98aedca3.6266b8",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "current_p3_LP1",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "562388d9.7f1a9",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "current_p2_LP2",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "41b8245b.5e25dc",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "current_p3_LP2",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "68aeb24.1c455cc",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "current_p2_LP3",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "eb955622.f1f86",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "current_p3_LP3",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "9eed1b2f.670f88",
        "type": "interval-length",
        "z": "da060938.c8ff48",
        "format": "mills",
        "bytopic": false,
        "minimum": "",
        "maximum": "",
        "window": "",
        "timeout": false,
        "msgTimeout": "",
        "minimumunit": "msecs",
        "maximumunit": "msecs",
        "windowunit": "msecs",
        "msgTimeoutUnit": "msecs",
        "reset": false,
        "startup": false,
        "msgField": "timeInterval",
        "timestampField": "previousTimestamp",
        "repeatTimeout": false,
        "name": "Zeit zwischen den Nachrichten messen",
        "x": 420,
        "y": 1140,
        "wires": [
            [
                "2af10c7b.8279c4"
            ],
            []
        ]
    },
    {
        "id": "4d3c89efaca7be5e",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "frequency",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "1711441c919e2a1d",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "HausverbrauchNorm_p1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "fc15ba2aeda2dbb2",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "HausverbrauchNorm_p2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a8e83e7e034910ce",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "HausverbrauchNorm_p3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "80f26b21aa9b6cca",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hausverbrauch_p1",
                "pt": "flow",
                "to": "$max(\t   [\t       payload+$flowContext(\"HausverbrauchNorm_p1\"),\t       0\t   ]\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "hausverbrauch_p2",
                "pt": "flow",
                "to": "$max(\t   [\t       payload+$flowContext(\"HausverbrauchNorm_p2\"),\t       0\t   ]\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "hausverbrauch_p3",
                "pt": "flow",
                "to": "$max(\t   [\t       payload+$flowContext(\"HausverbrauchNorm_p3\"),\t       0\t   ]\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "hausverbrauch",
                "pt": "flow",
                "to": "$flowContext(\"hausverbrauch_p1\") + $flowContext(\"hausverbrauch_p2\") + $flowContext(\"hausverbrauch_p3\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 980,
        "wires": [
            [
                "3ba0e67b.44155a",
                "6c586f55.6462e"
            ]
        ]
    },
    {
        "id": "c1f27145620a046e",
        "type": "inject",
        "z": "da060938.c8ff48",
        "name": "Debug",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "debug",
        "payload": "{\t   \"haus_norm\": [\t       $flowContext(\"HausverbrauchNorm_p1\"),\t       $flowContext(\"HausverbrauchNorm_p1\"),\t       $flowContext(\"HausverbrauchNorm_p1\")\t    ],\t    \"haus\": [\t        $flowContext(\"hausverbrauch_p1\"),\t        $flowContext(\"hausverbrauch_p2\"),\t        $flowContext(\"hausverbrauch_p3\")\t    ],\t    \"pv\": $flowContext(\"pv\"),\t    \"bat\": $flowContext(\"bat\"),\t    \"lp1\": [\t        $flowContext(\"id_LP1\"),\t        $flowContext(\"current_p1_LP1\"),\t        $flowContext(\"current_p2_LP1\"),\t        $flowContext(\"current_p3_LP1\")\t    ],\t    \"lp2\": [\t        $flowContext(\"id_LP2\"),\t        $flowContext(\"current_p1_LP2\"),\t        $flowContext(\"current_p2_LP2\"),\t        $flowContext(\"current_p3_LP2\")\t    ],\t    \"lp3\": [\t        $flowContext(\"id_LP3\"),\t        $flowContext(\"current_p1_LP3\"),\t        $flowContext(\"current_p2_LP3\"),\t        $flowContext(\"current_p3_LP3\")\t    ]\t}",
        "payloadType": "jsonata",
        "x": 1020,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ee96ba88673e1d59",
        "type": "switch",
        "z": "da060938.c8ff48",
        "name": "Switch by LP",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/1/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/2/",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "/3/",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 410,
        "y": 260,
        "wires": [
            [
                "2fa0518014006c84"
            ],
            [
                "b7990ed38fa1acd5"
            ],
            [
                "2954b1834ffee518"
            ]
        ]
    },
    {
        "id": "2fa0518014006c84",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id_LP1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b7990ed38fa1acd5",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id_LP2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "2954b1834ffee518",
        "type": "change",
        "z": "da060938.c8ff48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id_LP3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5c4ac285.afe6e4",
        "type": "subflow",
        "name": "Sub Ladepunkt 2.0",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 180,
                "wires": [
                    {
                        "id": "5564373bd8d8091a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 40,
                "wires": [
                    {
                        "id": "d477d279.2cc62",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1200,
                "y": 700,
                "wires": [
                    {
                        "id": "2254d233.5854e6",
                        "port": 0
                    },
                    {
                        "id": "58ec8187c6755198",
                        "port": 0
                    },
                    {
                        "id": "71b196bb372367ab",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1100,
                "y": 200,
                "wires": [
                    {
                        "id": "5b4b7510.acf434",
                        "port": 0
                    },
                    {
                        "id": "124dbffa.10bb",
                        "port": 0
                    },
                    {
                        "id": "5c185bf1.72503c",
                        "port": 0
                    },
                    {
                        "id": "78b855e9.ef0b24",
                        "port": 0
                    },
                    {
                        "id": "33434644.b16a22",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1210,
                "y": 40,
                "wires": [
                    {
                        "id": "bddf955cca42c275",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Component-ID",
                "type": "num",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-hashtag",
                    "type": "spinner",
                    "opts": {
                        "min": 1
                    }
                }
            },
            {
                "name": "Phase1",
                "type": "num",
                "value": "1",
                "ui": {
                    "icon": "font-awesome/fa-list-ol",
                    "type": "spinner",
                    "opts": {
                        "min": 1,
                        "max": 3
                    }
                }
            },
            {
                "name": "Chargepoint-ID",
                "type": "num",
                "value": "",
                "ui": {
                    "type": "spinner",
                    "opts": {
                        "min": 1,
                        "max": 3
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "Sollwerte"
        ],
        "outputLabels": [
            "openWB",
            "schnelle Regelwerte",
            "Input Passthrough",
            "Debug"
        ],
        "status": {
            "x": 900,
            "y": 40,
            "wires": [
                {
                    "id": "c4b80c5a.65fa88",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "5b4b7510.acf434",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Lp_Sollstrom",
                "pt": "flow",
                "to": "$number(payload)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "124dbffa.10bb",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Lp_EV_Phasen",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "78b855e9.ef0b24",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Lp_Stecker",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f1d98f14.271ef",
        "type": "switch",
        "z": "5c4ac285.afe6e4",
        "name": "Split Topics",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/set\\/current$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/max_phases$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/phases_to_use$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/plug_state$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/frequency$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 510,
        "y": 180,
        "wires": [
            [
                "5b4b7510.acf434"
            ],
            [
                "124dbffa.10bb"
            ],
            [
                "5c185bf1.72503c"
            ],
            [
                "78b855e9.ef0b24"
            ],
            [
                "33434644.b16a22"
            ]
        ],
        "outputLabels": [
            "Sollstrom",
            "Aktive Phasen",
            null,
            "Stecker-Status",
            "Soll-Netzfrequenz"
        ]
    },
    {
        "id": "546e1a19.1c607c",
        "type": "inject",
        "z": "5c4ac285.afe6e4",
        "name": "Publish Trigger",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "d477d279.2cc62"
            ]
        ]
    },
    {
        "id": "d477d279.2cc62",
        "type": "function",
        "z": "5c4ac285.afe6e4",
        "name": "Senden der Flow-Daten",
        "func": "const LPNumber = env.get(\"Component-ID\");\n\nvar chargestat = 0;\nif( flow.get(\"Lp_Strom1\") > 0 || flow.get(\"Lp_Strom2\") > 0 || flow.get(\"Lp_Strom3\") > 0 ){\n    chargestat = 1;\n}\n\nvar statusColor = \"red\";\nvar statusShape = \"ring\";\nif (flow.get(\"Lp_Stecker\") == 1){\n    statusColor = \"green\"\n    if (chargestat == 1){\n        statusShape = \"dot\";\n    }\n}\n\nconst actualPower = parseInt(flow.get(\"Lp_Ladeleistung\").toFixed(0));\nconst actualPowerkW = actualPower / 1000;\nconst phasesInUse = flow.get(\"Lp_Phasen\");\nconst phasesToUse = flow.get(\"Lp_Phasenumschaltung\");\nconst phasesEVmax = flow.get(\"Lp_EV_Phasen\");\nconst currentL1 = flow.get(\"Lp_Strom1\");\nconst currentL2 = flow.get(\"Lp_Strom2\");\nconst currentL3 = flow.get(\"Lp_Strom3\");\nconst volatageL1 = flow.get(\"Lp_Spannung1\");\nconst volatageL2 = flow.get(\"Lp_Spannung2\");\nconst volatageL3 = flow.get(\"Lp_Spannung3\");\nconst powerFactorL1 = flow.get(\"Lp_Leistungsfaktor1\");\nconst powerFactorL2 = flow.get(\"Lp_Leistungsfaktor2\");\nconst powerFactorL3 = flow.get(\"Lp_Leistungsfaktor3\");\n\nnode.status({\n        fill: statusColor,\n        shape: statusShape,\n        text:actualPowerkW.toFixed(1)+\"kW \"+phasesInUse+\"P(\"+phasesEVmax+\"/\"+phasesToUse+\")\"\n    });\n\nreturn [\n    [\n        {\n            topic: \"openWB/mqtt/chargepoint/\" + LPNumber + \"/get/currents\",\n            payload: [currentL1, currentL2, currentL3]\n        },\n        {\n            topic: \"openWB/mqtt/chargepoint/\" + LPNumber + \"/get/evse_current\",\n            payload: Math.max(0, currentL1 - 1)\n        },\n        {\n            topic: \"openWB/mqtt/chargepoint/\" + LPNumber + \"/get/voltages\",\n            payload: [volatageL1, volatageL2, volatageL3]\n        },\n        {\n            topic: \"openWB/mqtt/chargepoint/\" + LPNumber + \"/get/power\",\n            payload: actualPower\n        },\n        {\n            topic: \"openWB/mqtt/chargepoint/\" + LPNumber + \"/get/powers\",\n            payload: [volatageL1 * currentL1 * powerFactorL1, volatageL2 * currentL2 * powerFactorL2, volatageL3 * currentL3 * powerFactorL3]\n        },\n        {\n            topic: \"openWB/mqtt/chargepoint/\" + LPNumber + \"/get/power_factors\",\n            payload: [powerFactorL1, powerFactorL2, powerFactorL3]\n        },\n        {\n            topic: \"openWB/mqtt/chargepoint/\" + LPNumber + \"/get/frequency\",\n            payload: flow.get(\"Lp_Netzfrequenz\")\n        },\n        {\n            topic: \"openWB/mqtt/chargepoint/\" + LPNumber + \"/get/imported\",\n            payload: parseFloat(flow.get(\"Lp_Zähler_laden\").toFixed(3))\n        },\n        {\n            topic: \"openWB/mqtt/chargepoint/\" + LPNumber + \"/get/exported\",\n            payload: parseFloat(flow.get(\"Lp_Zähler_entladen\").toFixed(3))\n        },\n        {\n            topic: \"openWB/mqtt/chargepoint/\" + LPNumber + \"/get/plug_state\",\n            payload: flow.get(\"Lp_Stecker\")\n        },\n        {\n            topic: \"openWB/mqtt/chargepoint/\" + LPNumber + \"/get/charge_state\",\n            payload: chargestat\n        },\n        {\n            topic: \"openWB/mqtt/chargepoint/\" + LPNumber + \"/get/phases_in_use\",\n            payload: phasesInUse\n        }\n    ]\n]\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "16b7648f.04f14b",
        "type": "switch",
        "z": "5c4ac285.afe6e4",
        "name": "Zähler laden gesetzt?",
        "property": "Lp_Zähler_laden",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 340,
        "wires": [
            [
                "898e546f.9440e"
            ]
        ]
    },
    {
        "id": "898e546f.9440e",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "Zähler laden init",
        "rules": [
            {
                "t": "set",
                "p": "Lp_Zähler_laden",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "fa801f38.18d6c8",
        "type": "inject",
        "z": "5c4ac285.afe6e4",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "16b7648f.04f14b",
                "4351720d.b31ed4",
                "58ec8187c6755198",
                "4d37676232ebd1a7"
            ]
        ]
    },
    {
        "id": "5aa7e41e.77b01c",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "Energie in Wh",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$flowContext(\"Lp_Ladeleistung\")*timeInterval/1000/3600",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 760,
        "wires": [
            [
                "bd7cd25d6f0276eb"
            ]
        ],
        "info": "$number(payload)*(timeInterval/1000)/3600/1000"
    },
    {
        "id": "eae3cd53.403d28",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "Zähler laden aktualisieren",
        "rules": [
            {
                "t": "set",
                "p": "Lp_Zähler_laden",
                "pt": "flow",
                "to": "payload+$flowContext(\"Lp_Zähler_laden\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Lp_Zähler_laden",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 760,
        "wires": [
            [
                "d28d6c2d.ccd198"
            ]
        ]
    },
    {
        "id": "2254d233.5854e6",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Lp_Ladeleistung",
                "pt": "flow",
                "to": "$flowContext(\"Lp_Spannung1\")*$flowContext(\"Lp_Strom1\")*$flowContext(\"Lp_Leistungsfaktor1\")+$flowContext(\"Lp_Spannung2\")*$flowContext(\"Lp_Strom2\")*$flowContext(\"Lp_Leistungsfaktor2\")+$flowContext(\"Lp_Spannung3\")*$flowContext(\"Lp_Strom3\")*$flowContext(\"Lp_Leistungsfaktor3\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Lp_Ladeleistung",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "#",
                "fromt": "str",
                "to": "Component-ID",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 700,
        "wires": [
            [
                "65aa4e7c.604d5"
            ]
        ]
    },
    {
        "id": "95e69cc1.77d8d8",
        "type": "inject",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "Lp_Sollstrom",
        "payloadType": "flow",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "5db82d46.a42464"
            ]
        ]
    },
    {
        "id": "43c64905.ca1d68",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Lp_Spannung1",
                "pt": "flow",
                "to": "payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "Lp_Spannung2",
                "pt": "flow",
                "to": "payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "Lp_Spannung3",
                "pt": "flow",
                "to": "payload",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "/chargepoint/#/get/power_all",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 640,
        "wires": [
            [
                "2254d233.5854e6"
            ]
        ]
    },
    {
        "id": "cd6c0260.bf728",
        "type": "comment",
        "z": "5c4ac285.afe6e4",
        "name": "Spannungen",
        "info": "",
        "x": 150,
        "y": 640,
        "wires": []
    },
    {
        "id": "b05f8ef.8357c7",
        "type": "comment",
        "z": "5c4ac285.afe6e4",
        "name": "Ströme",
        "info": "",
        "x": 130,
        "y": 580,
        "wires": []
    },
    {
        "id": "2ed9ad3b.5b9922",
        "type": "comment",
        "z": "5c4ac285.afe6e4",
        "name": "Leistung",
        "info": "",
        "x": 140,
        "y": 700,
        "wires": []
    },
    {
        "id": "5db82d46.a42464",
        "type": "switch",
        "z": "5c4ac285.afe6e4",
        "name": "angesteckt?",
        "property": "Lp_Stecker",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 520,
        "wires": [
            [
                "c4b09682.906f4"
            ],
            [
                "702fd2d4.54ae6c"
            ]
        ]
    },
    {
        "id": "c4b09682.906f4",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "Sollstrom = 0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 520,
        "wires": [
            [
                "702fd2d4.54ae6c"
            ]
        ]
    },
    {
        "id": "a93713d.2f351f",
        "type": "comment",
        "z": "5c4ac285.afe6e4",
        "name": "Zählerstand",
        "info": "",
        "x": 150,
        "y": 760,
        "wires": []
    },
    {
        "id": "d8be3486.74562",
        "type": "random",
        "z": "5c4ac285.afe6e4",
        "name": "230V +/-5V",
        "low": "225",
        "high": "235",
        "inte": "false",
        "property": "payload",
        "x": 370,
        "y": 640,
        "wires": [
            [
                "5944aff0.c01d48"
            ]
        ]
    },
    {
        "id": "702fd2d4.54ae6c",
        "type": "smooth",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "4",
        "round": "0",
        "mult": "single",
        "reduce": false,
        "x": 560,
        "y": 580,
        "wires": [
            [
                "62f55674.8ce028"
            ]
        ]
    },
    {
        "id": "5944aff0.c01d48",
        "type": "smooth",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "10",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 540,
        "y": 640,
        "wires": [
            [
                "43c64905.ca1d68"
            ]
        ]
    },
    {
        "id": "c4b80c5a.65fa88",
        "type": "status",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "scope": [
            "d477d279.2cc62"
        ],
        "x": 780,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "62f55674.8ce028",
        "type": "function",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "func": "const phasesEVmax = flow.get(\"Lp_EV_Phasen\");\nconst phasesLPmax = flow.get(\"Lp_Phasenumschaltung\");\nvar phasesInUse = phasesEVmax;\nif(phasesEVmax > phasesLPmax){\n    phasesInUse = phasesLPmax;\n}\n\nvar phaseCurrents = [0,0,0];\n\nphaseCurrents[0] = msg.payload;\nif( phasesInUse > 1 )\n    phaseCurrents[1] = msg.payload;\nif( phasesInUse > 2 )\n    phaseCurrents[2] = msg.payload;\n\nflow.set(\"Lp_Strom1\", phaseCurrents[0]);\nflow.set(\"Lp_Strom2\", phaseCurrents[1]);\nflow.set(\"Lp_Strom3\", phaseCurrents[2]);\nflow.set(\"Lp_Phasen\", phasesInUse);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 580,
        "wires": [
            [
                "d8be3486.74562",
                "71b196bb372367ab"
            ]
        ]
    },
    {
        "id": "d04bd47e.42ea98",
        "type": "comment",
        "z": "5c4ac285.afe6e4",
        "name": "Netzfrequenz",
        "info": "",
        "x": 150,
        "y": 860,
        "wires": []
    },
    {
        "id": "d28d6c2d.ccd198",
        "type": "random",
        "z": "5c4ac285.afe6e4",
        "name": "+/-0.1Hz",
        "low": "-0.1",
        "high": "0.1",
        "inte": "false",
        "property": "payload",
        "x": 360,
        "y": 860,
        "wires": [
            [
                "25ba0874.01329"
            ]
        ]
    },
    {
        "id": "25ba0874.01329",
        "type": "smooth",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "5",
        "round": "2",
        "mult": "single",
        "reduce": false,
        "x": 560,
        "y": 860,
        "wires": [
            [
                "a8b4d76e.b28828"
            ]
        ]
    },
    {
        "id": "a8b4d76e.b28828",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Lp_Netzfrequenz",
                "pt": "flow",
                "to": "payload+$flowContext(\"Lp_NetzfrequenzNorm\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "33434644.b16a22",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Lp_NetzfrequenzNorm",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4351720d.b31ed4",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "Init flow context",
        "rules": [
            {
                "t": "set",
                "p": "Lp_NetzfrequenzNorm",
                "pt": "flow",
                "to": "50",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "Lp_Netzfrequenz",
                "pt": "flow",
                "to": "50",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "Lp_Strom1",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "Lp_Strom2",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "Lp_Strom2",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "Lp_Spannung1",
                "pt": "flow",
                "to": "230",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "Lp_Spannung2",
                "pt": "flow",
                "to": "230",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "Lp_Spannung3",
                "pt": "flow",
                "to": "230",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "Lp_Ladeleistung",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "Lp_Phasen",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "Lp_Leistungsfaktor1",
                "pt": "flow",
                "to": "1.0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "Lp_Leistungsfaktor2",
                "pt": "flow",
                "to": "1.0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "Lp_Leistungsfaktor3",
                "pt": "flow",
                "to": "1.0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "5c185bf1.72503c",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Lp_Phasenumschaltung",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "65aa4e7c.604d5",
        "type": "interval-length",
        "z": "5c4ac285.afe6e4",
        "format": "mills",
        "bytopic": false,
        "minimum": "",
        "maximum": "",
        "window": "",
        "timeout": false,
        "msgTimeout": "",
        "minimumunit": "msecs",
        "maximumunit": "msecs",
        "windowunit": "msecs",
        "msgTimeoutUnit": "msecs",
        "reset": false,
        "startup": false,
        "msgField": "timeInterval",
        "timestampField": "previousTimestamp",
        "repeatTimeout": false,
        "name": "Zeit zwischen den Nachrichten messen",
        "x": 460,
        "y": 760,
        "wires": [
            [
                "5aa7e41e.77b01c"
            ],
            []
        ]
    },
    {
        "id": "5564373bd8d8091a",
        "type": "switch",
        "z": "5c4ac285.afe6e4",
        "name": "Filter by Component-ID",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$contains(topic, \"chargepoint/\" & $string($env(\"Component-ID\")) & \"/\")",
                "vt": "jsonata"
            },
            {
                "t": "regex",
                "v": "^/",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "f1d98f14.271ef"
            ],
            [
                "f1d98f14.271ef"
            ]
        ]
    },
    {
        "id": "58ec8187c6755198",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "Push component-id to evu node",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$join(\t   [\t       \"simulator/chargepoint/\",\t       $string($env(\"Chargepoint-ID\")),\t       \"/id\"\t   ]\t)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$env(\"Component-ID\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "bddf955cca42c275",
        "type": "inject",
        "z": "5c4ac285.afe6e4",
        "name": "Debug",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "debug",
        "payload": "{\t   \"power\": $flowContext(\"Lp_Ladeleistung\"),\t   \"sollstrom\": $flowContext(\"Lp_Sollstrom\"),\t   \"strom\": [\t       $flowContext(\"Lp_Strom1\"),\t       $flowContext(\"Lp_Strom2\"),\t       $flowContext(\"Lp_Strom3\")\t   ],\t   \"spannung\": [\t       $flowContext(\"Lp_Spannung1\"),\t       $flowContext(\"Lp_Spannung2\"),\t       $flowContext(\"Lp_Spannung3\")\t   ],\t   \"lp_phasen\": $flowContext(\"Lp_Phasen\"),\t   \"ev_phasen\": $flowContext(\"Lp_EV_Phasen\"),\t   \"phasenumschaltung\": $flowContext(\"Lp_Phasenumschaltung\"),\t   \"stecker\": $flowContext(\"Lp_Stecker\"),\t   \"frequenz\": $flowContext(\"Lp_Netzfrequenz\"),\t   \"frequenz_norm\": $flowContext(\"Lp_NetzfrequenzNorm\"),\t   \"imported\": $flowContext(\"Lp_Zähler_laden\"),\t   \"exported\": $flowContext(\"Lp_Zähler_entladen\")\t}",
        "payloadType": "jsonata",
        "x": 1060,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "4d37676232ebd1a7",
        "type": "switch",
        "z": "5c4ac285.afe6e4",
        "name": "Zähler entladen gesetzt?",
        "property": "Lp_Zähler_entladen",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 380,
        "wires": [
            [
                "8c6c68173df4bf12"
            ]
        ]
    },
    {
        "id": "8c6c68173df4bf12",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "Zähler entladen init",
        "rules": [
            {
                "t": "set",
                "p": "Lp_Zähler_entladen",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "bd7cd25d6f0276eb",
        "type": "switch",
        "z": "5c4ac285.afe6e4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 760,
        "wires": [
            [
                "eae3cd53.403d28"
            ],
            [
                "733f65e137ec70e1"
            ]
        ],
        "outputLabels": [
            "laden",
            "entladen"
        ]
    },
    {
        "id": "733f65e137ec70e1",
        "type": "change",
        "z": "5c4ac285.afe6e4",
        "name": "Zähler entladen aktualisieren",
        "rules": [
            {
                "t": "set",
                "p": "Lp_Zähler_entladen",
                "pt": "flow",
                "to": "-payload+$flowContext(\"Lp_Zähler_entladen\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Lp_Zähler_entladen",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 800,
        "wires": [
            [
                "d28d6c2d.ccd198"
            ]
        ]
    },
    {
        "id": "71b196bb372367ab",
        "type": "function",
        "z": "5c4ac285.afe6e4",
        "name": "Phasen für EVU rotieren",
        "func": "const componentId = env.get(\"Component-ID\");\nconst phasesInUse = flow.get(\"Lp_Phasen\");\nconst phase1 = parseInt(env.get(\"Phase1\"));\n\nvar phaseCurrents = [0,0,0];\n\nswitch (phase1) {\n    case 1:\n        phaseCurrents[0] = msg.payload;\n        if( phasesInUse > 1 )\n            phaseCurrents[1] = msg.payload;\n        if( phasesInUse > 2 )\n            phaseCurrents[2] = msg.payload;\n        break;\n    case 2:\n        phaseCurrents[1] = msg.payload;\n        if( phasesInUse > 1 )\n            phaseCurrents[2] = msg.payload;\n        if( phasesInUse > 2 )\n            phaseCurrents[0] = msg.payload;\n        break;\n    case 3:\n        phaseCurrents[2] = msg.payload;\n        if( phasesInUse > 1 )\n            phaseCurrents[0] = msg.payload;\n        if( phasesInUse > 2 )\n            phaseCurrents[1] = msg.payload;\n        break;\n}\n\nvar evuPhaseCurrentMsgs = [\n    {\n        \"topic\": \"/chargepoint/\" + componentId + \"/get/current_p1\",\n        \"payload\": phaseCurrents[0]\n    },\n    {\n        \"topic\": \"/chargepoint/\" + componentId + \"/get/current_p2\",\n        \"payload\": phaseCurrents[1]\n    },\n    {\n        \"topic\": \"/chargepoint/\" + componentId + \"/get/current_p3\",\n        \"payload\": phaseCurrents[2]\n    }\n];\n\nreturn [evuPhaseCurrentMsgs];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 580,
        "wires": [
            []
        ],
        "outputLabels": [
            "Strom EVU (phasenrotiert)"
        ]
    },
    {
        "id": "a26b10150b92bb6e",
        "type": "tab",
        "label": "Simulator 2.0",
        "disabled": false,
        "info": "# Simulator für openWB 2.x\nMit diesem Flow kann eine komplette virtuelle Umgebung für openWB bereitgestellt werden.\nDie Umgebung besteht aus einem Zähler (muss als \"EVU\" in der Hierarchie eingerichtet sein),\neinem PV-Modul, einem Batteriespeicher sowie drei Ladepunkten.\n\n## Hintergrundwissen\nDie PV-Anlage ist aktuell an alle drei Phasen \"angeschlossen\" und verteilt die Leistung gleichmäßig.\n_(ToDo: Anschluss variabel auf einzelne Phasen konfigurierbar)_\n\nDer Batteriespeicher verteilt seine Leistung ebenfalls gleichmäßig auf alle drei Phasen.\n_(ToDo: Anschluss variabel auf einzelne Phasen konfigurierbar)_\n\nDie Leistung des Speichers wird durch einen PID-Regler gesteuert. Die Parameter sind noch nicht optimal\neingestellt. Es kann vorkommen, dass die Regelung anfängt zu schwingen.\n_(ToDo: PID-Regler optimieren)_\n\n## Einrichtung\n**Da alle Komponenten in openWB 2.x dynamisch vergeben werden, müssen nach dem Import des Flows\ndie Komponenten-IDs an die jeweiligen Gegebenheiten der eigenen Installation angepasst werden!**\n\nDie Komponenten-IDs können in den Eigenschaften der Sub-Flows \"EVU\", \"PV1\", \"Bat\", \"LP1\", \"LP2\" und \"LP3\"\nfestgelegt werden.\n\nIn den Sub-Flow Eigenschaften der Ladepunkte kann ebenfalls festgelegt werden, an welcher Phase L1 des\nEVU angeschlossen ist. Dadurch können auch komplexe Setups mit (gut oder ungünstig) rotierten Phasen\nabgebildet werden.\n\n---\n\n# Steuerungsmöglichkeiten im Dashboard\n\n## EVU Zähler\nDer virtuelle Hausverbrauch kann im Dashboard je Phase festgelegt werden. Dadurch können gezielt Schieflasten\nfür das Lastmanagement erzeugt werden.\n\nDie Netzfrequenz des Zählers kann variiert werden, um den Netzschutz seitens des Energieversorgers zu testen.\n\n## PV\nDie aktuelle Leistung des Wechselrichters kann zwischen 0W und 10kW variiert werden.\n\n## Batteriespeicher\nDer aktuelle Ladestand (SoC) kann gezielt eingestellt werden.\n\nDie maximale Leistung des Speichers kann zwischen 0W und 5kW eingestellt werden.\n\nDie virtuelle Kapazität des Batteriespeichers kann auf bis zu 15kWh angepsst werden.\n\n## Ladepunkte\nEs kann ein Fahrzeug \"angesteckt\" werden.\n\nEs kann angegeben werden, wieviele Phasen das angeschlossene Fahrzeug maximal nutzen kann.\n",
        "env": []
    },
    {
        "id": "2b8789d44361be4d",
        "type": "group",
        "z": "a26b10150b92bb6e",
        "name": "Ladepunkt 1",
        "style": {
            "label": true,
            "stroke": "#0070c0",
            "fill": "#0070c0",
            "fill-opacity": "0.25"
        },
        "nodes": [
            "d354e7c2548a978b",
            "27783b424f776b94",
            "d846fed1b32d7407",
            "d601e57052a346f1",
            "847a4a0b955e693a",
            "d11e0a8873838ac0",
            "b19e5e0489ea6be4",
            "a695643ee3d440c8",
            "5c18ee7df3c04a53",
            "15dec859516d1072",
            "c182ab59608a95fa",
            "6601d7ae608367a0",
            "e4de382a7c6cb05e",
            "b1647972f9bad8e9",
            "a72d4162a7ce2c81",
            "5b610cd47be5f898",
            "07f7394f595cdc14",
            "fda46ea03d10047f",
            "3f866da733c340ef",
            "3f92cf49f58b1890"
        ],
        "x": 14,
        "y": 1184,
        "w": 1152,
        "h": 417
    },
    {
        "id": "0fbf4628d81f95a6",
        "type": "group",
        "z": "a26b10150b92bb6e",
        "name": "PV 1",
        "style": {
            "stroke": "#92d04f",
            "fill": "#92d04f",
            "fill-opacity": "0.25",
            "label": true
        },
        "nodes": [
            "34ab434a418dc4cb",
            "b82527ae1e19277c",
            "8428e46c8fd91b9a",
            "27d88ac43bc1c9bf",
            "936ad7a5ceb3734a",
            "ef25d90b32ccced1",
            "7123aadf2d4f54c9",
            "e4ebadb1911e7c71",
            "ef773d25addb0d3a"
        ],
        "x": 14,
        "y": 571.5,
        "w": 1072,
        "h": 209.5
    },
    {
        "id": "fa25bd43fd5dd353",
        "type": "group",
        "z": "a26b10150b92bb6e",
        "name": "Ladepunkt 3",
        "style": {
            "label": true,
            "stroke": "#0070c0",
            "fill": "#0070c0",
            "fill-opacity": "0.25"
        },
        "nodes": [
            "15fad7c19afba9ed",
            "ebcbfc0538b776c6",
            "80ecaf6a86ec2b9c",
            "5e700a4eaa18952e",
            "268088d942827d20",
            "13c5ee3c85542563",
            "1a60f8e771088c45",
            "9481ae70d2566720",
            "4ef3579e4de98a3b",
            "a82c73c563817d0b",
            "abdd7e36c1c0213b",
            "7bfd390095672b92",
            "0d425cacb641d696",
            "b355309fdd9e19a7",
            "fe87e51e24b75c7d",
            "b0a56a7b7466a2a3",
            "b28e8e103a0d50ae",
            "f89844106a48b64e",
            "889a2c4dde7f9467",
            "9874cdda7e889430"
        ],
        "x": 14,
        "y": 2104,
        "w": 1152,
        "h": 417
    },
    {
        "id": "046a68453c0c5a03",
        "type": "group",
        "z": "a26b10150b92bb6e",
        "name": "EVU",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff0000",
            "fill-opacity": "0.25",
            "label": true
        },
        "nodes": [
            "5d9dfca6a8d3d2d4",
            "903734c07be527ce",
            "6c406c7099789a1d",
            "111ad07eeb17b2fd",
            "052ea769e394b34b",
            "44f7e8fcd1c1e878",
            "240c9152d8cebcdd",
            "b37e9f23e4011226",
            "f8bc887985756118",
            "09ac4e0ceb606292",
            "b24cb309898d4bec",
            "a9486fde8ae4ab93",
            "39df644aec36024e",
            "b730c873b755c2d9",
            "09a7b335ac090afb",
            "b2f168e8c66231da",
            "46b17f00d28d334f",
            "24d872e12e3eebb9"
        ],
        "x": 14,
        "y": 251.5,
        "w": 1092,
        "h": 289.5
    },
    {
        "id": "ad4196a94a67b05c",
        "type": "group",
        "z": "a26b10150b92bb6e",
        "name": "Speicher",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffC000",
            "fill-opacity": "0.25",
            "label": true
        },
        "nodes": [
            "023afd3af73ba1cf",
            "b7c6a7fb694f67bf",
            "60d5b5e108f25bdf",
            "c9d038ac7617079f",
            "e8c05a3538d9f534",
            "db4c775bf8af61db",
            "5fe5cf71e32c4616",
            "1d2899c93e1b2f5c",
            "e6d168da0af43b3c",
            "7ada3cb0dbdc8ce1",
            "4ba5f2d78ddf8e51",
            "ca4fb7af80ec33e9",
            "869aaf32ca43c13c",
            "12c76e185d53dc6f",
            "3344d51d31f02532",
            "a5011073c17db1bb",
            "7c409d706c57838a",
            "c03bb30e4ca73e78",
            "f263bb0a604bbbc2"
        ],
        "x": 14,
        "y": 796.5,
        "w": 1092,
        "h": 344.5
    },
    {
        "id": "638b6f1753455240",
        "type": "group",
        "z": "a26b10150b92bb6e",
        "name": "Ladepunkt 2",
        "style": {
            "label": true,
            "stroke": "#0070c0",
            "fill": "#0070c0",
            "fill-opacity": "0.25"
        },
        "nodes": [
            "e5496250f0b6780c",
            "4170b938df8741ea",
            "b74e6a3fe2c94ada",
            "eb7ef9a65313cbea",
            "1f837862cf063e94",
            "91d3ae866a4691a0",
            "4f8297e9eabd00c1",
            "8cd7e71906e941c1",
            "fb677cfca0fd76aa",
            "4f5516144896e201",
            "0d6fb8e814d9fcab",
            "e286c61f25cbc210",
            "6377ce5ec6c2ee8c",
            "546370620a1edc0d",
            "9a9d2a353f611174",
            "17ac90c307e2e95a",
            "83233896c0f2fdf7",
            "4b98e0afdf7df3ef",
            "b51b21b2912f5630",
            "6bd47596a82cdfe5"
        ],
        "x": 14,
        "y": 1644,
        "w": 1152,
        "h": 417
    },
    {
        "id": "ade7e97b39d7e05b",
        "type": "group",
        "z": "a26b10150b92bb6e",
        "name": "Allgemeine Nodes",
        "style": {
            "label": true
        },
        "nodes": [
            "fd7e447e8da41259",
            "e445ab5f8f832e5a",
            "ec20b8c6f88cf77d",
            "8348d3c5ce603581",
            "098de9d475cc7c5e",
            "f6958548763cb844",
            "96aa241558f9d48b"
        ],
        "x": 4,
        "y": 19,
        "w": 1082,
        "h": 202
    },
    {
        "id": "d354e7c2548a978b",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "max. 3 Phasen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/max_phases",
        "payload": "3",
        "payloadType": "num",
        "x": 140,
        "y": 1300,
        "wires": [
            [
                "a695643ee3d440c8"
            ]
        ]
    },
    {
        "id": "27783b424f776b94",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "Abgesteckt",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/plug_state",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 1340,
        "wires": [
            [
                "a695643ee3d440c8"
            ]
        ]
    },
    {
        "id": "fd7e447e8da41259",
        "type": "mqtt in",
        "z": "a26b10150b92bb6e",
        "g": "ade7e97b39d7e05b",
        "name": "",
        "topic": "openWB/mqtt/chargepoint/+/set/current",
        "qos": "0",
        "datatype": "json",
        "broker": "5c48b79a.d6b918",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 200,
        "y": 60,
        "wires": [
            [
                "ec20b8c6f88cf77d"
            ]
        ]
    },
    {
        "id": "8348d3c5ce603581",
        "type": "mqtt out",
        "z": "a26b10150b92bb6e",
        "g": "ade7e97b39d7e05b",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5c48b79a.d6b918",
        "x": 1010,
        "y": 60,
        "wires": []
    },
    {
        "id": "d846fed1b32d7407",
        "type": "ui_dropdown",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "EV1 max. Phasen",
        "label": "EV max. Phasen",
        "tooltip": "",
        "place": "Select option",
        "group": "703fdeb2.7ab84",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "1 Phase",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2 Phasen",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3 Phasen",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "/max_phases",
        "topicType": "str",
        "className": "",
        "x": 590,
        "y": 1400,
        "wires": [
            [
                "a695643ee3d440c8"
            ]
        ]
    },
    {
        "id": "d601e57052a346f1",
        "type": "ui_switch",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "Lp1 Stecker",
        "label": "Stecker",
        "tooltip": "",
        "group": "703fdeb2.7ab84",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "/plug_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 570,
        "y": 1460,
        "wires": [
            [
                "a695643ee3d440c8"
            ]
        ]
    },
    {
        "id": "847a4a0b955e693a",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "group": "703fdeb2.7ab84",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Lp1 Zähler Ladung",
        "label": "Zählerstand laden",
        "format": "{{value/1000 | number:3}} kWh",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 1320,
        "wires": []
    },
    {
        "id": "d11e0a8873838ac0",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "group": "703fdeb2.7ab84",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Lp1 Sollstrom",
        "label": "Soll-Strom",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "className": "",
        "x": 1020,
        "y": 1520,
        "wires": []
    },
    {
        "id": "b19e5e0489ea6be4",
        "type": "ui_gauge",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "Lp1 Leistung",
        "group": "703fdeb2.7ab84",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Leistung",
        "label": "kW",
        "format": "{{value/1000 | number:2}}",
        "min": 0,
        "max": "22080",
        "colors": [
            "#00b500",
            "#00ff00",
            "#00b500"
        ],
        "seg1": "4140",
        "seg2": "7360",
        "className": "",
        "x": 1010,
        "y": 1400,
        "wires": []
    },
    {
        "id": "a695643ee3d440c8",
        "type": "subflow:5c4ac285.afe6e4",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "LP1",
        "env": [
            {
                "name": "Component-ID",
                "value": "3",
                "type": "num"
            },
            {
                "name": "Chargepoint-ID",
                "value": "1",
                "type": "num"
            },
            {
                "name": "Component ID",
                "value": "3",
                "type": "num"
            }
        ],
        "x": 630,
        "y": 1240,
        "wires": [
            [
                "5c18ee7df3c04a53",
                "b1647972f9bad8e9",
                "e4de382a7c6cb05e"
            ],
            [
                "15dec859516d1072"
            ],
            [
                "5b610cd47be5f898"
            ],
            []
        ],
        "outputLabels": [
            "openWB",
            "schnelle Regelwerte",
            "input passthrough",
            ""
        ]
    },
    {
        "id": "5c18ee7df3c04a53",
        "type": "switch",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/get\\/imported$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/get\\/exported$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/get\\/power$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/get\\/phases_in_use$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/get\\/currents$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 810,
        "y": 1340,
        "wires": [
            [
                "847a4a0b955e693a"
            ],
            [
                "fda46ea03d10047f"
            ],
            [
                "b19e5e0489ea6be4"
            ],
            [
                "07f7394f595cdc14"
            ],
            [
                "a72d4162a7ce2c81"
            ]
        ],
        "outputLabels": [
            "Zählerstand laden",
            "Zählerstand entladen",
            "Leistung",
            "aktive Phasen",
            "Ströme"
        ]
    },
    {
        "id": "15fad7c19afba9ed",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "group": "77ebf297.439d3c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Lp3 Sollstrom",
        "label": "Soll-Strom",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1020,
        "y": 2440,
        "wires": []
    },
    {
        "id": "ebcbfc0538b776c6",
        "type": "ui_dropdown",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "EV3 max. Phasen",
        "label": "EV max. Phasen",
        "tooltip": "",
        "place": "Select option",
        "group": "77ebf297.439d3c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "1 Phase",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2 Phasen",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3 Phasen",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "/max_phases",
        "topicType": "str",
        "className": "",
        "x": 590,
        "y": 2320,
        "wires": [
            [
                "13c5ee3c85542563"
            ]
        ]
    },
    {
        "id": "80ecaf6a86ec2b9c",
        "type": "ui_switch",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "Lp3 Stecker",
        "label": "Stecker",
        "tooltip": "",
        "group": "77ebf297.439d3c",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "/plug_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 570,
        "y": 2380,
        "wires": [
            [
                "13c5ee3c85542563"
            ]
        ]
    },
    {
        "id": "5e700a4eaa18952e",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "max. 1 Phase",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/max_phases",
        "payload": "1",
        "payloadType": "num",
        "x": 140,
        "y": 2220,
        "wires": [
            [
                "13c5ee3c85542563"
            ]
        ]
    },
    {
        "id": "268088d942827d20",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "Abgesteckt",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/plug_state",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 2260,
        "wires": [
            [
                "13c5ee3c85542563"
            ]
        ]
    },
    {
        "id": "13c5ee3c85542563",
        "type": "subflow:5c4ac285.afe6e4",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "LP3",
        "env": [
            {
                "name": "Component-ID",
                "value": "5",
                "type": "num"
            },
            {
                "name": "Phase1",
                "value": "3",
                "type": "num"
            },
            {
                "name": "Chargepoint-ID",
                "value": "3",
                "type": "num"
            },
            {
                "name": "LPNumber",
                "value": "3",
                "type": "num"
            }
        ],
        "x": 630,
        "y": 2160,
        "wires": [
            [
                "0d425cacb641d696",
                "b355309fdd9e19a7",
                "7bfd390095672b92"
            ],
            [
                "4ef3579e4de98a3b"
            ],
            [
                "b28e8e103a0d50ae"
            ],
            []
        ]
    },
    {
        "id": "1a60f8e771088c45",
        "type": "ui_gauge",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "Lp3 Leistung",
        "group": "77ebf297.439d3c",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Leistung",
        "label": "kW",
        "format": "{{value/1000 | number:2}}",
        "min": 0,
        "max": "22080",
        "colors": [
            "#00b500",
            "#00ff00",
            "#00b500"
        ],
        "seg1": "4140",
        "seg2": "7360",
        "className": "",
        "x": 1010,
        "y": 2320,
        "wires": []
    },
    {
        "id": "9481ae70d2566720",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "group": "77ebf297.439d3c",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Lp3 Zähler Ladung",
        "label": "Zählerstand laden",
        "format": "{{value/1000 | number:3}} kWh",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 2240,
        "wires": []
    },
    {
        "id": "5d9dfca6a8d3d2d4",
        "type": "switch",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/imported$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/exported$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/power$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/currents$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 790,
        "y": 400,
        "wires": [
            [
                "111ad07eeb17b2fd"
            ],
            [
                "903734c07be527ce"
            ],
            [
                "6c406c7099789a1d"
            ],
            [
                "09ac4e0ceb606292"
            ]
        ],
        "outputLabels": [
            "Zählerstand Import",
            "Zählerstand Export",
            "Leistung",
            "Ströme"
        ]
    },
    {
        "id": "903734c07be527ce",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "group": "9b18f281.ca979",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "EVU Zähler Export",
        "label": "Zählerstand Exp.",
        "format": "{{value/1000 | number:3}} kWh",
        "layout": "row-spread",
        "x": 990,
        "y": 420,
        "wires": []
    },
    {
        "id": "6c406c7099789a1d",
        "type": "ui_gauge",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "EVU Leistung",
        "group": "9b18f281.ca979",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Leistung",
        "label": "kW",
        "format": "{{value/1000 | number:2}}",
        "min": "-10000",
        "max": "20000",
        "colors": [
            "#00ff00",
            "#ff0000",
            "#ff0000"
        ],
        "seg1": "0",
        "seg2": "0",
        "x": 980,
        "y": 460,
        "wires": []
    },
    {
        "id": "111ad07eeb17b2fd",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "group": "9b18f281.ca979",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "EVU Zähler Import",
        "label": "Zählerstand Imp.",
        "format": "{{value/1000 | number:3}} kWh",
        "layout": "row-spread",
        "x": 990,
        "y": 380,
        "wires": []
    },
    {
        "id": "052ea769e394b34b",
        "type": "subflow:da060938.c8ff48",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "EVU",
        "env": [],
        "x": 590,
        "y": 300,
        "wires": [
            [
                "5d9dfca6a8d3d2d4",
                "a9486fde8ae4ab93",
                "b24cb309898d4bec"
            ],
            [
                "240c9152d8cebcdd"
            ],
            []
        ],
        "outputLabels": [
            "openWB",
            "schnelle Regelwerte",
            ""
        ]
    },
    {
        "id": "44f7e8fcd1c1e878",
        "type": "link in",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "EVU In",
        "links": [
            "12c76e185d53dc6f",
            "ef25d90b32ccced1",
            "15dec859516d1072",
            "fb677cfca0fd76aa",
            "4ef3579e4de98a3b"
        ],
        "x": 335,
        "y": 300,
        "wires": [
            [
                "052ea769e394b34b"
            ]
        ]
    },
    {
        "id": "023afd3af73ba1cf",
        "type": "switch",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/imported$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/exported$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/power$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/soc$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 790,
        "y": 960,
        "wires": [
            [
                "b7c6a7fb694f67bf"
            ],
            [
                "60d5b5e108f25bdf"
            ],
            [
                "c9d038ac7617079f"
            ],
            [
                "e8c05a3538d9f534",
                "db4c775bf8af61db"
            ]
        ],
        "outputLabels": [
            "Zählerstand Import",
            "Zählerstand Export",
            "Leistung",
            "SoC"
        ]
    },
    {
        "id": "b7c6a7fb694f67bf",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "group": "bda74558.0d74e8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "BAT Zähler Import",
        "label": "Zählerstand Imp.",
        "format": "{{value/1000 | number:3}} kWh",
        "layout": "row-spread",
        "x": 990,
        "y": 940,
        "wires": []
    },
    {
        "id": "60d5b5e108f25bdf",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "group": "bda74558.0d74e8",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "BAT Zähler Export",
        "label": "Zählerstand Exp.",
        "format": "{{value/1000 | number:3}} kWh",
        "layout": "row-spread",
        "x": 990,
        "y": 980,
        "wires": []
    },
    {
        "id": "c9d038ac7617079f",
        "type": "ui_gauge",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "BAT Leistung",
        "group": "bda74558.0d74e8",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Leistung",
        "label": "kW",
        "format": "{{value/1000 | number:2}}",
        "min": "-5000",
        "max": "5000",
        "colors": [
            "#00ff00",
            "#ffff00",
            "#ff0000"
        ],
        "seg1": "0",
        "seg2": "0",
        "className": "",
        "x": 970,
        "y": 1020,
        "wires": []
    },
    {
        "id": "e8c05a3538d9f534",
        "type": "ui_gauge",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "BAT SoC",
        "group": "bda74558.0d74e8",
        "order": 8,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "SoC",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#ff0000",
            "#ffff00",
            "#00ff00"
        ],
        "seg1": "33",
        "seg2": "66",
        "x": 960,
        "y": 1060,
        "wires": []
    },
    {
        "id": "db4c775bf8af61db",
        "type": "ui_slider",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "Ladestand",
        "label": "SoC",
        "tooltip": "",
        "group": "bda74558.0d74e8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "/soc",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": "1",
        "className": "",
        "x": 970,
        "y": 1100,
        "wires": [
            [
                "ca4fb7af80ec33e9"
            ]
        ]
    },
    {
        "id": "5fe5cf71e32c4616",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "50% SoC",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "/soc",
        "payload": "50",
        "payloadType": "num",
        "x": 120,
        "y": 920,
        "wires": [
            [
                "ca4fb7af80ec33e9"
            ]
        ]
    },
    {
        "id": "1d2899c93e1b2f5c",
        "type": "ui_slider",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "",
        "label": "Max. Leistung",
        "tooltip": "",
        "group": "bda74558.0d74e8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "/BatMaxPower",
        "min": 0,
        "max": "5000",
        "step": "100",
        "x": 400,
        "y": 980,
        "wires": [
            [
                "ca4fb7af80ec33e9"
            ]
        ]
    },
    {
        "id": "e6d168da0af43b3c",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "3300W Leistung",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "/BatMaxPower",
        "payload": "3300",
        "payloadType": "num",
        "x": 140,
        "y": 980,
        "wires": [
            [
                "1d2899c93e1b2f5c"
            ]
        ]
    },
    {
        "id": "7ada3cb0dbdc8ce1",
        "type": "ui_slider",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "",
        "label": "Kapazität",
        "tooltip": "",
        "group": "bda74558.0d74e8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "/BatCapacity",
        "min": 0,
        "max": "15000",
        "step": "1000",
        "x": 380,
        "y": 1040,
        "wires": [
            [
                "ca4fb7af80ec33e9"
            ]
        ]
    },
    {
        "id": "4ba5f2d78ddf8e51",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "5kWh Kapazität",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "/BatCapacity",
        "payload": "5000",
        "payloadType": "num",
        "x": 140,
        "y": 1040,
        "wires": [
            [
                "7ada3cb0dbdc8ce1"
            ]
        ]
    },
    {
        "id": "ca4fb7af80ec33e9",
        "type": "subflow:2dd5cf5c.4ae26",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "Bat",
        "env": [],
        "x": 590,
        "y": 860,
        "wires": [
            [
                "023afd3af73ba1cf",
                "a5011073c17db1bb",
                "7c409d706c57838a"
            ],
            [
                "12c76e185d53dc6f"
            ],
            [
                "869aaf32ca43c13c"
            ],
            [
                "f263bb0a604bbbc2"
            ],
            []
        ]
    },
    {
        "id": "869aaf32ca43c13c",
        "type": "ui_chart",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "",
        "group": "bda74558.0d74e8",
        "order": 9,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 790,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "12c76e185d53dc6f",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "BAT out",
        "links": [
            "44f7e8fcd1c1e878"
        ],
        "x": 755,
        "y": 1020,
        "wires": []
    },
    {
        "id": "240c9152d8cebcdd",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "EVU Out",
        "links": [
            "3344d51d31f02532"
        ],
        "x": 715,
        "y": 500,
        "wires": []
    },
    {
        "id": "3344d51d31f02532",
        "type": "link in",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "BAT In",
        "links": [
            "240c9152d8cebcdd",
            "96aa241558f9d48b"
        ],
        "x": 335,
        "y": 860,
        "wires": [
            [
                "ca4fb7af80ec33e9"
            ]
        ]
    },
    {
        "id": "15dec859516d1072",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "LP1 out",
        "links": [
            "44f7e8fcd1c1e878"
        ],
        "x": 775,
        "y": 1280,
        "wires": []
    },
    {
        "id": "4ef3579e4de98a3b",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "LP3 out",
        "links": [
            "44f7e8fcd1c1e878"
        ],
        "x": 775,
        "y": 2200,
        "wires": []
    },
    {
        "id": "34ab434a418dc4cb",
        "type": "ui_slider",
        "z": "a26b10150b92bb6e",
        "g": "0fbf4628d81f95a6",
        "name": "",
        "label": "PV-Leistung",
        "tooltip": "",
        "group": "1690fa25.a7c9a6",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "/W",
        "min": 0,
        "max": "10000",
        "step": "100",
        "x": 390,
        "y": 620,
        "wires": [
            [
                "936ad7a5ceb3734a"
            ]
        ]
    },
    {
        "id": "b82527ae1e19277c",
        "type": "switch",
        "z": "a26b10150b92bb6e",
        "g": "0fbf4628d81f95a6",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/exported$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/power$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 700,
        "wires": [
            [
                "8428e46c8fd91b9a"
            ],
            [
                "27d88ac43bc1c9bf"
            ]
        ],
        "outputLabels": [
            "Zählerstand",
            "Leistung"
        ]
    },
    {
        "id": "8428e46c8fd91b9a",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "0fbf4628d81f95a6",
        "group": "1690fa25.a7c9a6",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "PV Zähler",
        "label": "Zählerstand",
        "format": "{{value/1000 | number:3}} kWh",
        "layout": "row-spread",
        "x": 960,
        "y": 700,
        "wires": []
    },
    {
        "id": "27d88ac43bc1c9bf",
        "type": "ui_gauge",
        "z": "a26b10150b92bb6e",
        "g": "0fbf4628d81f95a6",
        "name": "PV Leistung",
        "group": "1690fa25.a7c9a6",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Leistung",
        "label": "kW",
        "format": "{{value/1000 | number:2}}",
        "min": 0,
        "max": "-10000",
        "colors": [
            "#00b500",
            "#00ff00",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "x": 970,
        "y": 740,
        "wires": []
    },
    {
        "id": "936ad7a5ceb3734a",
        "type": "subflow:c5821ca1.ee2da",
        "z": "a26b10150b92bb6e",
        "g": "0fbf4628d81f95a6",
        "name": "PV1",
        "env": [],
        "x": 590,
        "y": 620,
        "wires": [
            [
                "b82527ae1e19277c",
                "ef773d25addb0d3a",
                "e4ebadb1911e7c71"
            ],
            [
                "ef25d90b32ccced1"
            ],
            []
        ]
    },
    {
        "id": "ef25d90b32ccced1",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "0fbf4628d81f95a6",
        "name": "PV out",
        "links": [
            "44f7e8fcd1c1e878"
        ],
        "x": 715,
        "y": 740,
        "wires": []
    },
    {
        "id": "7123aadf2d4f54c9",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "0fbf4628d81f95a6",
        "name": "1500 W",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/W",
        "payload": "1500",
        "payloadType": "num",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "34ab434a418dc4cb"
            ]
        ]
    },
    {
        "id": "e445ab5f8f832e5a",
        "type": "mqtt in",
        "z": "a26b10150b92bb6e",
        "g": "ade7e97b39d7e05b",
        "name": "",
        "topic": "openWB/mqtt/chargepoint/+/set/phases_to_use",
        "qos": "0",
        "datatype": "json",
        "broker": "5c48b79a.d6b918",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 220,
        "y": 120,
        "wires": [
            [
                "ec20b8c6f88cf77d"
            ]
        ]
    },
    {
        "id": "c182ab59608a95fa",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "group": "703fdeb2.7ab84",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Lp1 Sollphasen",
        "label": "Soll-Phasen",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1020,
        "y": 1560,
        "wires": []
    },
    {
        "id": "a82c73c563817d0b",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "group": "77ebf297.439d3c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Lp3 Sollphasen",
        "label": "Soll-Phasen",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1020,
        "y": 2480,
        "wires": []
    },
    {
        "id": "07f7394f595cdc14",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "group": "703fdeb2.7ab84",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Lp1 Phasen",
        "label": "Ist-Phasen",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 1440,
        "wires": []
    },
    {
        "id": "b0a56a7b7466a2a3",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "group": "77ebf297.439d3c",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Lp3 Phasen",
        "label": "Ist-Phasen",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 2360,
        "wires": []
    },
    {
        "id": "0d425cacb641d696",
        "type": "switch",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/get\\/imported$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/get\\/exported$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/get\\/power$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/get\\/phases_in_use$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/get\\/currents$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 810,
        "y": 2260,
        "wires": [
            [
                "9481ae70d2566720"
            ],
            [
                "f89844106a48b64e"
            ],
            [
                "1a60f8e771088c45"
            ],
            [
                "b0a56a7b7466a2a3"
            ],
            [
                "fe87e51e24b75c7d"
            ]
        ],
        "outputLabels": [
            "Zählerstand laden",
            "Zählerstand entladen",
            "Leistung",
            "aktive Phasen",
            "Ströme"
        ]
    },
    {
        "id": "ef773d25addb0d3a",
        "type": "debug",
        "z": "a26b10150b92bb6e",
        "g": "0fbf4628d81f95a6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 620,
        "wires": []
    },
    {
        "id": "a9486fde8ae4ab93",
        "type": "debug",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "7c409d706c57838a",
        "type": "debug",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 860,
        "wires": []
    },
    {
        "id": "b1647972f9bad8e9",
        "type": "debug",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1240,
        "wires": []
    },
    {
        "id": "9a9d2a353f611174",
        "type": "debug",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1700,
        "wires": []
    },
    {
        "id": "b355309fdd9e19a7",
        "type": "debug",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 2160,
        "wires": []
    },
    {
        "id": "b37e9f23e4011226",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "Netzfrequenz 50Hz",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/frequency",
        "payload": "50",
        "payloadType": "num",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "f8bc887985756118"
            ]
        ]
    },
    {
        "id": "f8bc887985756118",
        "type": "ui_slider",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "EVU Netzfrequenz",
        "label": "Netzfrequenz",
        "tooltip": "",
        "group": "9b18f281.ca979",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "/frequency",
        "topicType": "str",
        "min": "40",
        "max": "55",
        "step": "0.1",
        "className": "",
        "x": 370,
        "y": 340,
        "wires": [
            [
                "052ea769e394b34b"
            ]
        ]
    },
    {
        "id": "e5496250f0b6780c",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "group": "3fdb380f.aba898",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Lp2 Sollstrom",
        "label": "Soll-Strom",
        "format": "{{msg.payload}} A",
        "layout": "row-spread",
        "x": 1020,
        "y": 1980,
        "wires": []
    },
    {
        "id": "4170b938df8741ea",
        "type": "ui_dropdown",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "EV2 max. Phasen",
        "label": "EV max. Phasen",
        "tooltip": "",
        "place": "Select option",
        "group": "3fdb380f.aba898",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "1 Phase",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2 Phasen",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3 Phasen",
                "value": 3,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "/max_phases",
        "topicType": "str",
        "className": "",
        "x": 590,
        "y": 1860,
        "wires": [
            [
                "91d3ae866a4691a0"
            ]
        ]
    },
    {
        "id": "b74e6a3fe2c94ada",
        "type": "ui_switch",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "Lp2 Stecker",
        "label": "Stecker",
        "tooltip": "",
        "group": "3fdb380f.aba898",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "/plug_state",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 570,
        "y": 1920,
        "wires": [
            [
                "91d3ae866a4691a0"
            ]
        ]
    },
    {
        "id": "eb7ef9a65313cbea",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "max. 2 Phasen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/max_phases",
        "payload": "2",
        "payloadType": "num",
        "x": 140,
        "y": 1760,
        "wires": [
            [
                "91d3ae866a4691a0"
            ]
        ]
    },
    {
        "id": "1f837862cf063e94",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "Abgesteckt",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/plug_state",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 1800,
        "wires": [
            [
                "91d3ae866a4691a0"
            ]
        ]
    },
    {
        "id": "91d3ae866a4691a0",
        "type": "subflow:5c4ac285.afe6e4",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "LP2",
        "env": [
            {
                "name": "Component-ID",
                "value": "4",
                "type": "num"
            },
            {
                "name": "Phase1",
                "value": "2",
                "type": "num"
            },
            {
                "name": "Chargepoint-ID",
                "value": "2",
                "type": "num"
            },
            {
                "name": "LPNumber",
                "value": "2",
                "type": "num"
            }
        ],
        "x": 630,
        "y": 1700,
        "wires": [
            [
                "e286c61f25cbc210",
                "9a9d2a353f611174",
                "546370620a1edc0d"
            ],
            [
                "fb677cfca0fd76aa"
            ],
            [
                "83233896c0f2fdf7"
            ],
            []
        ]
    },
    {
        "id": "4f8297e9eabd00c1",
        "type": "ui_gauge",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "Lp2 Leistung",
        "group": "3fdb380f.aba898",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Leistung",
        "label": "kW",
        "format": "{{value/1000 | number:2}}",
        "min": 0,
        "max": "22080",
        "colors": [
            "#00b500",
            "#00ff00",
            "#00b500"
        ],
        "seg1": "4140",
        "seg2": "7360",
        "className": "",
        "x": 1010,
        "y": 1860,
        "wires": []
    },
    {
        "id": "8cd7e71906e941c1",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "group": "3fdb380f.aba898",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Lp2 Zähler Ladung",
        "label": "Zählerstand laden",
        "format": "{{value/1000 | number:3}} kWh",
        "layout": "row-spread",
        "className": "",
        "x": 1030,
        "y": 1780,
        "wires": []
    },
    {
        "id": "fb677cfca0fd76aa",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "LP2 out",
        "links": [
            "44f7e8fcd1c1e878"
        ],
        "x": 775,
        "y": 1740,
        "wires": []
    },
    {
        "id": "4f5516144896e201",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "group": "3fdb380f.aba898",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Lp2 Sollphasen",
        "label": "Soll-Phasen",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1020,
        "y": 2020,
        "wires": []
    },
    {
        "id": "0d6fb8e814d9fcab",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "group": "3fdb380f.aba898",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "Lp2 Phasen",
        "label": "Ist-Phasen",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 1900,
        "wires": []
    },
    {
        "id": "e286c61f25cbc210",
        "type": "switch",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/get\\/imported$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/get\\/exported$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/get\\/power$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/get\\/phases_in_use$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/get\\/currents$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 810,
        "y": 1800,
        "wires": [
            [
                "8cd7e71906e941c1"
            ],
            [
                "4b98e0afdf7df3ef"
            ],
            [
                "4f8297e9eabd00c1"
            ],
            [
                "0d6fb8e814d9fcab"
            ],
            [
                "17ac90c307e2e95a"
            ]
        ],
        "outputLabels": [
            "Zählerstand laden",
            "Zählerstand entladen",
            "Leistung",
            "aktive Phasen",
            "Ströme"
        ]
    },
    {
        "id": "ec20b8c6f88cf77d",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "ade7e97b39d7e05b",
        "name": "Set Chargepoint",
        "mode": "link",
        "links": [
            "abdd7e36c1c0213b",
            "6377ce5ec6c2ee8c",
            "6601d7ae608367a0"
        ],
        "x": 475,
        "y": 60,
        "wires": []
    },
    {
        "id": "6601d7ae608367a0",
        "type": "link in",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "LP1 Set Current",
        "links": [
            "ec20b8c6f88cf77d"
        ],
        "x": 155,
        "y": 1240,
        "wires": [
            [
                "a695643ee3d440c8"
            ]
        ]
    },
    {
        "id": "6377ce5ec6c2ee8c",
        "type": "link in",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "LP2 Set",
        "links": [
            "ec20b8c6f88cf77d"
        ],
        "x": 155,
        "y": 1700,
        "wires": [
            [
                "91d3ae866a4691a0"
            ]
        ]
    },
    {
        "id": "abdd7e36c1c0213b",
        "type": "link in",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "LP3 Set",
        "links": [
            "ec20b8c6f88cf77d"
        ],
        "x": 155,
        "y": 2160,
        "wires": [
            [
                "13c5ee3c85542563"
            ]
        ]
    },
    {
        "id": "098de9d475cc7c5e",
        "type": "link in",
        "z": "a26b10150b92bb6e",
        "g": "ade7e97b39d7e05b",
        "name": "Out OpenWB",
        "links": [
            "546370620a1edc0d",
            "e4de382a7c6cb05e",
            "7bfd390095672b92",
            "b24cb309898d4bec",
            "e4ebadb1911e7c71",
            "a5011073c17db1bb"
        ],
        "x": 775,
        "y": 60,
        "wires": [
            [
                "8348d3c5ce603581"
            ]
        ]
    },
    {
        "id": "e4de382a7c6cb05e",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "LP1 Out OpenWB",
        "mode": "link",
        "links": [
            "098de9d475cc7c5e"
        ],
        "x": 955,
        "y": 1280,
        "wires": []
    },
    {
        "id": "546370620a1edc0d",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "LP2 Out OpenWB",
        "mode": "link",
        "links": [
            "098de9d475cc7c5e"
        ],
        "x": 955,
        "y": 1740,
        "wires": []
    },
    {
        "id": "7bfd390095672b92",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "LP3 Out OpenWB",
        "mode": "link",
        "links": [
            "098de9d475cc7c5e"
        ],
        "x": 955,
        "y": 2200,
        "wires": []
    },
    {
        "id": "a72d4162a7ce2c81",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "group": "703fdeb2.7ab84",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Lp1 Ströme",
        "format": "{{msg.payload[0] | number:2}} / {{msg.payload[1] | number:2}} / {{msg.payload[2] | number:2}}",
        "layout": "row-spread",
        "className": "",
        "x": 1010,
        "y": 1480,
        "wires": []
    },
    {
        "id": "17ac90c307e2e95a",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "group": "3fdb380f.aba898",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Lp2 Ströme",
        "format": "{{msg.payload[0] | number:2}} / {{msg.payload[1] | number:2}} / {{msg.payload[2] | number:2}}",
        "layout": "row-spread",
        "className": "",
        "x": 1010,
        "y": 1940,
        "wires": []
    },
    {
        "id": "fe87e51e24b75c7d",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "group": "77ebf297.439d3c",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Lp3 Ströme",
        "format": "{{msg.payload[0] | number:2}} / {{msg.payload[1] | number:2}} / {{msg.payload[2] | number:2}}",
        "layout": "row-spread",
        "className": "",
        "x": 1010,
        "y": 2400,
        "wires": []
    },
    {
        "id": "5b610cd47be5f898",
        "type": "switch",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/max_phases$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/plug_state$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/current$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/phases_to_use$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 370,
        "y": 1500,
        "wires": [
            [
                "d846fed1b32d7407"
            ],
            [
                "d601e57052a346f1"
            ],
            [
                "d11e0a8873838ac0"
            ],
            [
                "c182ab59608a95fa"
            ]
        ],
        "outputLabels": [
            "",
            "",
            "Sollstrom",
            "Sollphasen"
        ]
    },
    {
        "id": "83233896c0f2fdf7",
        "type": "switch",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/max_phases$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/plug_state$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/current$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/phases_to_use$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 370,
        "y": 1960,
        "wires": [
            [
                "4170b938df8741ea"
            ],
            [
                "b74e6a3fe2c94ada"
            ],
            [
                "e5496250f0b6780c"
            ],
            [
                "4f5516144896e201"
            ]
        ],
        "outputLabels": [
            "",
            "",
            "Sollstrom",
            "Sollphasen"
        ]
    },
    {
        "id": "b28e8e103a0d50ae",
        "type": "switch",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "\\/max_phases$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/plug_state$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/current$",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": "\\/phases_to_use$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 370,
        "y": 2420,
        "wires": [
            [
                "ebcbfc0538b776c6"
            ],
            [
                "80ecaf6a86ec2b9c"
            ],
            [
                "15fad7c19afba9ed"
            ],
            [
                "a82c73c563817d0b"
            ]
        ],
        "outputLabels": [
            "",
            "",
            "Sollstrom",
            "Sollphasen"
        ]
    },
    {
        "id": "09ac4e0ceb606292",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "group": "9b18f281.ca979",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "EVU Ströme",
        "format": "{{msg.payload[0] | number:2}} / {{msg.payload[1] | number:2}} / {{msg.payload[2] | number:2}}",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 500,
        "wires": []
    },
    {
        "id": "b24cb309898d4bec",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "EVU Out OpenWB",
        "mode": "link",
        "links": [
            "098de9d475cc7c5e"
        ],
        "x": 915,
        "y": 340,
        "wires": []
    },
    {
        "id": "e4ebadb1911e7c71",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "0fbf4628d81f95a6",
        "name": "PV1 Out OpenWB",
        "mode": "link",
        "links": [
            "098de9d475cc7c5e"
        ],
        "x": 915,
        "y": 660,
        "wires": []
    },
    {
        "id": "a5011073c17db1bb",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "Bat Out OpenWB",
        "mode": "link",
        "links": [
            "098de9d475cc7c5e"
        ],
        "x": 915,
        "y": 900,
        "wires": []
    },
    {
        "id": "b2f168e8c66231da",
        "type": "ui_slider",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "",
        "label": "Hausverbrauch L1",
        "tooltip": "",
        "group": "9b18f281.ca979",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "/Hausverbrauch_p1",
        "topicType": "str",
        "min": 0,
        "max": "10000",
        "step": "50",
        "className": "",
        "x": 370,
        "y": 380,
        "wires": [
            [
                "052ea769e394b34b"
            ]
        ]
    },
    {
        "id": "46b17f00d28d334f",
        "type": "ui_slider",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "",
        "label": "Hausverbrauch L2",
        "tooltip": "",
        "group": "9b18f281.ca979",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "/Hausverbrauch_p2",
        "topicType": "str",
        "min": 0,
        "max": "10000",
        "step": "50",
        "className": "",
        "x": 370,
        "y": 420,
        "wires": [
            [
                "052ea769e394b34b"
            ]
        ]
    },
    {
        "id": "24d872e12e3eebb9",
        "type": "ui_slider",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "",
        "label": "Hausverbrauch L3",
        "tooltip": "",
        "group": "9b18f281.ca979",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "/Hausverbrauch_p3",
        "topicType": "str",
        "min": 0,
        "max": "10000",
        "step": "50",
        "className": "",
        "x": 370,
        "y": 460,
        "wires": [
            [
                "052ea769e394b34b"
            ]
        ]
    },
    {
        "id": "39df644aec36024e",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "150 W",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/Hausverbrauch_p1",
        "payload": "150",
        "payloadType": "num",
        "x": 110,
        "y": 380,
        "wires": [
            [
                "b2f168e8c66231da"
            ]
        ]
    },
    {
        "id": "b730c873b755c2d9",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "150 W",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/Hausverbrauch_p2",
        "payload": "150",
        "payloadType": "num",
        "x": 110,
        "y": 420,
        "wires": [
            [
                "46b17f00d28d334f"
            ]
        ]
    },
    {
        "id": "09a7b335ac090afb",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "046a68453c0c5a03",
        "name": "150 W",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/Hausverbrauch_p3",
        "payload": "150",
        "payloadType": "num",
        "x": 110,
        "y": 460,
        "wires": [
            [
                "24d872e12e3eebb9"
            ]
        ]
    },
    {
        "id": "fda46ea03d10047f",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "group": "703fdeb2.7ab84",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Lp1 Zähler Entladung",
        "label": "Zählerstand entladen",
        "format": "{{value/1000 | number:3}} kWh",
        "layout": "row-spread",
        "className": "",
        "x": 1040,
        "y": 1360,
        "wires": []
    },
    {
        "id": "4b98e0afdf7df3ef",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "group": "3fdb380f.aba898",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Lp2 Zähler Entladung",
        "label": "Zählerstand entladen",
        "format": "{{value/1000 | number:3}} kWh",
        "layout": "row-spread",
        "className": "",
        "x": 1040,
        "y": 1820,
        "wires": []
    },
    {
        "id": "f89844106a48b64e",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "group": "77ebf297.439d3c",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Lp3 Zähler Entladung",
        "label": "Zählerstand entladen",
        "format": "{{value/1000 | number:3}} kWh",
        "layout": "row-spread",
        "className": "",
        "x": 1040,
        "y": 2280,
        "wires": []
    },
    {
        "id": "3f866da733c340ef",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "50Hz",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/frequency",
        "payload": "50",
        "payloadType": "num",
        "x": 110,
        "y": 1380,
        "wires": [
            [
                "3f92cf49f58b1890"
            ]
        ]
    },
    {
        "id": "3f92cf49f58b1890",
        "type": "ui_slider",
        "z": "a26b10150b92bb6e",
        "g": "2b8789d44361be4d",
        "name": "LP1 Netzfrequenz",
        "label": "Netzfrequenz",
        "tooltip": "",
        "group": "703fdeb2.7ab84",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "/frequency",
        "topicType": "str",
        "min": "40",
        "max": "55",
        "step": "0.1",
        "className": "",
        "x": 290,
        "y": 1380,
        "wires": [
            [
                "a695643ee3d440c8"
            ]
        ]
    },
    {
        "id": "b51b21b2912f5630",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "50Hz",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/frequency",
        "payload": "50",
        "payloadType": "num",
        "x": 110,
        "y": 1840,
        "wires": [
            [
                "6bd47596a82cdfe5"
            ]
        ]
    },
    {
        "id": "6bd47596a82cdfe5",
        "type": "ui_slider",
        "z": "a26b10150b92bb6e",
        "g": "638b6f1753455240",
        "name": "LP2 Netzfrequenz",
        "label": "Netzfrequenz",
        "tooltip": "",
        "group": "3fdb380f.aba898",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "/frequency",
        "topicType": "str",
        "min": "40",
        "max": "55",
        "step": "0.1",
        "className": "",
        "x": 270,
        "y": 1840,
        "wires": [
            [
                "91d3ae866a4691a0"
            ]
        ]
    },
    {
        "id": "889a2c4dde7f9467",
        "type": "inject",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "50Hz",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "/frequency",
        "payload": "50",
        "payloadType": "num",
        "x": 110,
        "y": 2300,
        "wires": [
            [
                "9874cdda7e889430"
            ]
        ]
    },
    {
        "id": "9874cdda7e889430",
        "type": "ui_slider",
        "z": "a26b10150b92bb6e",
        "g": "fa25bd43fd5dd353",
        "name": "LP3 Netzfrequenz",
        "label": "Netzfrequenz",
        "tooltip": "",
        "group": "77ebf297.439d3c",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "/frequency",
        "topicType": "str",
        "min": "40",
        "max": "55",
        "step": "0.1",
        "className": "",
        "x": 270,
        "y": 2300,
        "wires": [
            [
                "13c5ee3c85542563"
            ]
        ]
    },
    {
        "id": "f6958548763cb844",
        "type": "mqtt in",
        "z": "a26b10150b92bb6e",
        "g": "ade7e97b39d7e05b",
        "name": "",
        "topic": "openWB/mqtt/bat/+/set/power_limit",
        "qos": "0",
        "datatype": "json",
        "broker": "5c48b79a.d6b918",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "96aa241558f9d48b"
            ]
        ]
    },
    {
        "id": "96aa241558f9d48b",
        "type": "link out",
        "z": "a26b10150b92bb6e",
        "g": "ade7e97b39d7e05b",
        "name": "Set Bat",
        "mode": "link",
        "links": [
            "3344d51d31f02532"
        ],
        "x": 475,
        "y": 180,
        "wires": []
    },
    {
        "id": "c03bb30e4ca73e78",
        "type": "ui_text",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "group": "bda74558.0d74e8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "dyn. Limit",
        "format": "{{payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 800,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f263bb0a604bbbc2",
        "type": "change",
        "z": "a26b10150b92bb6e",
        "g": "ad4196a94a67b05c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload = null ? \"- kW\" : $formatNumber(payload / 1000, \"0.000 kW\")\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1100,
        "wires": [
            [
                "c03bb30e4ca73e78"
            ]
        ]
    },
    {
        "id": "5c48b79a.d6b918",
        "type": "mqtt-broker",
        "name": "openWB-20",
        "broker": "localhost",
        "port": "1883",
        "clientid": "node-red-simulator",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "703fdeb2.7ab84",
        "type": "ui_group",
        "name": "Lp 1",
        "tab": "940b8055.1139f",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "77ebf297.439d3c",
        "type": "ui_group",
        "name": "Lp 3",
        "tab": "940b8055.1139f",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9b18f281.ca979",
        "type": "ui_group",
        "name": "EVU Zähler",
        "tab": "940b8055.1139f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bda74558.0d74e8",
        "type": "ui_group",
        "name": "Speicher 1",
        "tab": "940b8055.1139f",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1690fa25.a7c9a6",
        "type": "ui_group",
        "name": "PV 1",
        "tab": "940b8055.1139f",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3fdb380f.aba898",
        "type": "ui_group",
        "name": "Lp 2",
        "tab": "940b8055.1139f",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "940b8055.1139f",
        "type": "ui_tab",
        "name": "Simulator 2.0",
        "icon": "fa-car ",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]
